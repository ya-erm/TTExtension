openapi: 3.0.1
info:
  title: Tinkoff Invest API
  termsOfService: https://www.tinkoff.ru/invest/disclaimers/basic-information/
  contact:
    email: al.a.volkov@tinkoff.ru
  version: '1.0.4'
externalDocs:
  description: Документация Tinkoff Invest API
  url: https://tinkoff.github.io/investAPI/
servers:
- url: https://invest-public-api.tinkoff.ru/rest/
  description: "Работа с биржей"
security:
- Bearer: []
tags:
- name: InstrumentsService
- name: MarketDataService
- name: OperationsService
- name: OrdersService
- name: SandboxService
- name: StopOrdersService
- name: UsersService
paths:
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/BondBy:
    post:
      operationId: InstrumentsService_BondBy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InstrumentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BondResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения облигации по её идентификатору.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/Bonds:
    post:
      operationId: InstrumentsService_Bonds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InstrumentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BondsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения списка облигаций.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/Currencies:
    post:
      operationId: InstrumentsService_Currencies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InstrumentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CurrenciesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения списка валют.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/CurrencyBy:
    post:
      operationId: InstrumentsService_CurrencyBy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InstrumentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CurrencyResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения валюты по её идентификатору.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/EtfBy:
    post:
      operationId: InstrumentsService_EtfBy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InstrumentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1EtfResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения инвестиционного фонда по его идентификатору.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/Etfs:
    post:
      operationId: InstrumentsService_Etfs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InstrumentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1EtfsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения списка инвестиционных фондов.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/FutureBy:
    post:
      operationId: InstrumentsService_FutureBy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InstrumentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1FutureResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения фьючерса по его идентификатору.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/Futures:
    post:
      operationId: InstrumentsService_Futures
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InstrumentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1FuturesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения списка фьючерсов.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetAccruedInterests:
    post:
      operationId: InstrumentsService_GetAccruedInterests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetAccruedInterestsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAccruedInterestsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения накопленного купонного дохода по облигации.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetBondCoupons:
    post:
      operationId: InstrumentsService_GetBondCoupons
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetBondCouponsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetBondCouponsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения графика выплат купонов по облигации
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetDividends:
    post:
      operationId: InstrumentsService_GetDividends
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetDividendsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDividendsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод для получения событий выплаты дивидендов по инструменту.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetFuturesMargin:
    post:
      operationId: InstrumentsService_GetFuturesMargin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetFuturesMarginRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetFuturesMarginResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения размера гарантийного обеспечения по фьючерсам.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/GetInstrumentBy:
    post:
      operationId: InstrumentsService_GetInstrumentBy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InstrumentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1InstrumentResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения основной информации об инструменте.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/ShareBy:
    post:
      operationId: InstrumentsService_ShareBy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InstrumentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1ShareResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения акции по её идентификатору.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/Shares:
    post:
      operationId: InstrumentsService_Shares
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1InstrumentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SharesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения списка акций.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.InstrumentsService/TradingSchedules:
    post:
      operationId: InstrumentsService_TradingSchedules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1TradingSchedulesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1TradingSchedulesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения расписания торгов торговых площадок.
      tags:
      - InstrumentsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.MarketDataService/GetCandles:
    post:
      operationId: MarketDataService_GetCandles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetCandlesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetCandlesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод запроса исторических свечей по инструменту.
      tags:
      - MarketDataService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.MarketDataService/GetLastPrices:
    post:
      operationId: MarketDataService_GetLastPrices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetLastPricesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetLastPricesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод запроса последних цен по инструментам.
      tags:
      - MarketDataService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.MarketDataService/GetOrderBook:
    post:
      operationId: MarketDataService_GetOrderBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetOrderBookRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetOrderBookResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения стакана по инструменту.
      tags:
      - MarketDataService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.MarketDataService/GetTradingStatus:
    post:
      operationId: MarketDataService_GetTradingStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetTradingStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetTradingStatusResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод запроса статуса торгов по инструментам.
      tags:
      - MarketDataService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.OperationsService/GetBrokerReport:
    post:
      operationId: OperationsService_GetBrokerReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1BrokerReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1BrokerReportResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения брокерского отчёта.
      tags:
      - OperationsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.OperationsService/GetDividendsForeignIssuer:
    post:
      operationId: OperationsService_GetDividendsForeignIssuer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetDividendsForeignIssuerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetDividendsForeignIssuerResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения отчёта "Справка о доходах за пределами РФ".
      tags:
      - OperationsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.OperationsService/GetOperations:
    post:
      operationId: OperationsService_GetOperations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OperationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OperationsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения списка операций по счёту.
      tags:
      - OperationsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.OperationsService/GetPortfolio:
    post:
      operationId: OperationsService_GetPortfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PortfolioRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PortfolioResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения портфеля по счёту.
      tags:
      - OperationsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.OperationsService/GetPositions:
    post:
      operationId: OperationsService_GetPositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PositionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PositionsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения списка позиций по счёту.
      tags:
      - OperationsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.OperationsService/GetWithdrawLimits:
    post:
      operationId: OperationsService_GetWithdrawLimits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1WithdrawLimitsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1WithdrawLimitsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения доступного остатка для вывода средств.
      tags:
      - OperationsService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.OrdersService/CancelOrder:
    post:
      operationId: OrdersService_CancelOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CancelOrderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CancelOrderResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод отмены биржевой заявки.
      tags:
      - OrdersService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.OrdersService/GetOrderState:
    post:
      operationId: OrdersService_GetOrderState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetOrderStateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrderState'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения статуса торгового поручения.
      tags:
      - OrdersService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.OrdersService/GetOrders:
    post:
      operationId: OrdersService_GetOrders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetOrdersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetOrdersResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения списка активных заявок по счёту.
      tags:
      - OrdersService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.OrdersService/PostOrder:
    post:
      operationId: OrdersService_PostOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PostOrderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PostOrderResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод выставления заявки.
      tags:
      - OrdersService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.SandboxService/CancelSandboxOrder:
    post:
      operationId: SandboxService_CancelSandboxOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CancelOrderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CancelOrderResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод отмены торгового поручения в песочнице.
      tags:
      - SandboxService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.SandboxService/CloseSandboxAccount:
    post:
      operationId: SandboxService_CloseSandboxAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CloseSandboxAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CloseSandboxAccountResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод закрытия счёта в песочнице.
      tags:
      - SandboxService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxAccounts:
    post:
      operationId: SandboxService_GetSandboxAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetAccountsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAccountsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения счетов в песочнице.
      tags:
      - SandboxService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxOperations:
    post:
      operationId: SandboxService_GetSandboxOperations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OperationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OperationsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения операций в песочнице по номеру счёта.
      tags:
      - SandboxService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxOrderState:
    post:
      operationId: SandboxService_GetSandboxOrderState
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetOrderStateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OrderState'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения статуса заявки в песочнице.
      tags:
      - SandboxService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxOrders:
    post:
      operationId: SandboxService_GetSandboxOrders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetOrdersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetOrdersResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения списка активных заявок по счёту в песочнице.
      tags:
      - SandboxService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxPortfolio:
    post:
      operationId: SandboxService_GetSandboxPortfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PortfolioRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PortfolioResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения портфолио в песочнице.
      tags:
      - SandboxService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.SandboxService/GetSandboxPositions:
    post:
      operationId: SandboxService_GetSandboxPositions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PositionsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PositionsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения позиций по виртуальному счёту песочницы.
      tags:
      - SandboxService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.SandboxService/OpenSandboxAccount:
    post:
      operationId: SandboxService_OpenSandboxAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1OpenSandboxAccountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1OpenSandboxAccountResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод регистрации счёта в песочнице.
      tags:
      - SandboxService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.SandboxService/PostSandboxOrder:
    post:
      operationId: SandboxService_PostSandboxOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PostOrderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PostOrderResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод выставления торгового поручения в песочнице.
      tags:
      - SandboxService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.SandboxService/SandboxPayIn:
    post:
      operationId: SandboxService_SandboxPayIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1SandboxPayInRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1SandboxPayInResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод пополнения счёта в песочнице.
      tags:
      - SandboxService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.StopOrdersService/CancelStopOrder:
    post:
      operationId: StopOrdersService_CancelStopOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1CancelStopOrderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1CancelStopOrderResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод отмены стоп-заявки.
      tags:
      - StopOrdersService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.StopOrdersService/GetStopOrders:
    post:
      operationId: StopOrdersService_GetStopOrders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetStopOrdersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetStopOrdersResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения списка активных стоп заявок по счёту.
      tags:
      - StopOrdersService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.StopOrdersService/PostStopOrder:
    post:
      operationId: StopOrdersService_PostStopOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1PostStopOrderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1PostStopOrderResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод выставления стоп-заявки.
      tags:
      - StopOrdersService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.UsersService/GetAccounts:
    post:
      operationId: UsersService_GetAccounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetAccountsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetAccountsResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения счетов пользователя.
      tags:
      - UsersService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.UsersService/GetInfo:
    post:
      operationId: UsersService_GetInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetInfoRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetInfoResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Метод получения информации о пользователе.
      tags:
      - UsersService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.UsersService/GetMarginAttributes:
    post:
      operationId: UsersService_GetMarginAttributes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetMarginAttributesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetMarginAttributesResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Расчёт маржинальных показателей по счёту.
      tags:
      - UsersService
      x-codegen-request-body-name: body
  /tinkoff.public.invest.api.contract.v1.UsersService/GetUserTariff:
    post:
      operationId: UsersService_GetUserTariff
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/v1GetUserTariffRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1GetUserTariffResponse'
          description: A successful response.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Запрос тарифа пользователя.
      tags:
      - UsersService
      x-codegen-request-body-name: body
components:
  schemas:
    protobufAny:
      additionalProperties:
        type: object
      example:
        '@type': '@type'
      properties:
        '@type':
          type: string
      type: object
    rpcStatus:
      example:
        code: 1
        details:
        - '@type': '@type'
        - '@type': '@type'
        message: message
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
    v1AccessLevel:
      default: ACCOUNT_ACCESS_LEVEL_UNSPECIFIED
      description: Уровень доступа к счёту.
      enum:
      - ACCOUNT_ACCESS_LEVEL_UNSPECIFIED
      - ACCOUNT_ACCESS_LEVEL_FULL_ACCESS
      - ACCOUNT_ACCESS_LEVEL_READ_ONLY
      - ACCOUNT_ACCESS_LEVEL_NO_ACCESS
      type: string
    v1Account:
      description: Информация о счёте.
      example:
        openedDate: 2000-01-23T04:56:07.000+00:00
        closedDate: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
      properties:
        id:
          description: Идентификатор счёта.
          type: string
        type:
          $ref: '#/components/schemas/v1AccountType'
        name:
          description: Название счёта.
          type: string
        status:
          $ref: '#/components/schemas/v1AccountStatus'
        openedDate:
          description: Дата открытия счёта в часовом поясе UTC.
          format: date-time
          type: string
        closedDate:
          description: Дата закрытия счёта в часовом поясе UTC.
          format: date-time
          type: string
        accessLevel:
          $ref: '#/components/schemas/v1AccessLevel'
      type: object
    v1AccountStatus:
      default: ACCOUNT_STATUS_UNSPECIFIED
      description: Статус счёта.
      enum:
      - ACCOUNT_STATUS_UNSPECIFIED
      - ACCOUNT_STATUS_NEW
      - ACCOUNT_STATUS_OPEN
      - ACCOUNT_STATUS_CLOSED
      type: string
    v1AccountType:
      default: ACCOUNT_TYPE_UNSPECIFIED
      description: Тип счёта.
      enum:
      - ACCOUNT_TYPE_UNSPECIFIED
      - ACCOUNT_TYPE_TINKOFF
      - ACCOUNT_TYPE_TINKOFF_IIS
      - ACCOUNT_TYPE_INVEST_BOX
      type: string
    v1AccruedInterest:
      description: Операция начисления купонов.
      example:
        date: 2000-01-23T04:56:07.000+00:00
        valuePercent:
          nano: 6
          units: units
        nominal:
          nano: 6
          units: units
        value:
          nano: 6
          units: units
      properties:
        date:
          format: date-time
          type: string
        value:
          $ref: '#/components/schemas/v1Quotation'
        valuePercent:
          $ref: '#/components/schemas/v1Quotation'
        nominal:
          $ref: '#/components/schemas/v1Quotation'
      type: object
    v1Bond:
      description: Объект передачи информации об облигации.
      example:
        figi: figi
        dshortMin:
          nano: 6
          units: units
        countryOfRisk: countryOfRisk
        lot: 0
        dlong:
          nano: 6
          units: units
        nominal:
          nano: 5
          currency: currency
          units: units
        maturityDate: 2000-01-23T04:56:07.000+00:00
        sellAvailableFlag: true
        currency: currency
        placementPrice:
          nano: 5
          currency: currency
          units: units
        aciValue:
          nano: 5
          currency: currency
          units: units
        sector: sector
        buyAvailableFlag: true
        classCode: classCode
        ticker: ticker
        couponQuantityPerYear: 1
        apiTradeAvailableFlag: true
        dlongMin:
          nano: 6
          units: units
        shortEnabledFlag: true
        kshort:
          nano: 6
          units: units
        stateRegDate: 2000-01-23T04:56:07.000+00:00
        issueSizePlan: issueSizePlan
        minPriceIncrement:
          nano: 6
          units: units
        otcFlag: true
        klong:
          nano: 6
          units: units
        dshort:
          nano: 6
          units: units
        issueKind: issueKind
        placementDate: 2000-01-23T04:56:07.000+00:00
        amortizationFlag: true
        perpetualFlag: true
        name: name
        issueSize: issueSize
        exchange: exchange
        floatingCouponFlag: true
        countryOfRiskName: countryOfRiskName
        isin: isin
      properties:
        figi:
          type: string
        ticker:
          type: string
        classCode:
          type: string
        isin:
          type: string
        lot:
          format: int32
          type: integer
        currency:
          type: string
        klong:
          $ref: '#/components/schemas/v1Quotation'
        kshort:
          $ref: '#/components/schemas/v1Quotation'
        dlong:
          $ref: '#/components/schemas/v1Quotation'
        dshort:
          $ref: '#/components/schemas/v1Quotation'
        dlongMin:
          $ref: '#/components/schemas/v1Quotation'
        dshortMin:
          $ref: '#/components/schemas/v1Quotation'
        shortEnabledFlag:
          type: boolean
        name:
          type: string
        exchange:
          type: string
        couponQuantityPerYear:
          format: int32
          type: integer
        maturityDate:
          format: date-time
          type: string
        nominal:
          $ref: '#/components/schemas/v1MoneyValue'
        stateRegDate:
          format: date-time
          type: string
        placementDate:
          format: date-time
          type: string
        placementPrice:
          $ref: '#/components/schemas/v1MoneyValue'
        aciValue:
          $ref: '#/components/schemas/v1MoneyValue'
        countryOfRisk:
          type: string
        countryOfRiskName:
          type: string
        sector:
          type: string
        issueKind:
          type: string
        issueSize:
          format: int64
          type: string
        issueSizePlan:
          format: int64
          type: string
        tradingStatus:
          $ref: '#/components/schemas/v1SecurityTradingStatus'
        otcFlag:
          type: boolean
        buyAvailableFlag:
          type: boolean
        sellAvailableFlag:
          type: boolean
        floatingCouponFlag:
          type: boolean
        perpetualFlag:
          type: boolean
        amortizationFlag:
          type: boolean
        minPriceIncrement:
          $ref: '#/components/schemas/v1Quotation'
        apiTradeAvailableFlag:
          type: boolean
      type: object
    v1BondResponse:
      description: Информация об облигации.
      example:
        instrument:
          figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          dlong:
            nano: 6
            units: units
          nominal:
            nano: 5
            currency: currency
            units: units
          maturityDate: 2000-01-23T04:56:07.000+00:00
          sellAvailableFlag: true
          currency: currency
          placementPrice:
            nano: 5
            currency: currency
            units: units
          aciValue:
            nano: 5
            currency: currency
            units: units
          sector: sector
          buyAvailableFlag: true
          classCode: classCode
          ticker: ticker
          couponQuantityPerYear: 1
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          stateRegDate: 2000-01-23T04:56:07.000+00:00
          issueSizePlan: issueSizePlan
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          issueKind: issueKind
          placementDate: 2000-01-23T04:56:07.000+00:00
          amortizationFlag: true
          perpetualFlag: true
          name: name
          issueSize: issueSize
          exchange: exchange
          floatingCouponFlag: true
          countryOfRiskName: countryOfRiskName
          isin: isin
      properties:
        instrument:
          $ref: '#/components/schemas/v1Bond'
      type: object
    v1BondsResponse:
      description: Список облигаций.
      example:
        instruments:
        - figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          dlong:
            nano: 6
            units: units
          nominal:
            nano: 5
            currency: currency
            units: units
          maturityDate: 2000-01-23T04:56:07.000+00:00
          sellAvailableFlag: true
          currency: currency
          placementPrice:
            nano: 5
            currency: currency
            units: units
          aciValue:
            nano: 5
            currency: currency
            units: units
          sector: sector
          buyAvailableFlag: true
          classCode: classCode
          ticker: ticker
          couponQuantityPerYear: 1
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          stateRegDate: 2000-01-23T04:56:07.000+00:00
          issueSizePlan: issueSizePlan
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          issueKind: issueKind
          placementDate: 2000-01-23T04:56:07.000+00:00
          amortizationFlag: true
          perpetualFlag: true
          name: name
          issueSize: issueSize
          exchange: exchange
          floatingCouponFlag: true
          countryOfRiskName: countryOfRiskName
          isin: isin
        - figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          dlong:
            nano: 6
            units: units
          nominal:
            nano: 5
            currency: currency
            units: units
          maturityDate: 2000-01-23T04:56:07.000+00:00
          sellAvailableFlag: true
          currency: currency
          placementPrice:
            nano: 5
            currency: currency
            units: units
          aciValue:
            nano: 5
            currency: currency
            units: units
          sector: sector
          buyAvailableFlag: true
          classCode: classCode
          ticker: ticker
          couponQuantityPerYear: 1
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          stateRegDate: 2000-01-23T04:56:07.000+00:00
          issueSizePlan: issueSizePlan
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          issueKind: issueKind
          placementDate: 2000-01-23T04:56:07.000+00:00
          amortizationFlag: true
          perpetualFlag: true
          name: name
          issueSize: issueSize
          exchange: exchange
          floatingCouponFlag: true
          countryOfRiskName: countryOfRiskName
          isin: isin
      properties:
        instruments:
          items:
            $ref: '#/components/schemas/v1Bond'
          type: array
      type: object
    v1BrokerReport:
      example:
        exchangeClearingCommission:
          nano: 5
          currency: currency
          units: units
        separateAgreementDate: separateAgreementDate
        orderId: orderId
        figi: figi
        executeSign: executeSign
        brokerCommission:
          nano: 5
          currency: currency
          units: units
        repoRate:
          nano: 6
          units: units
        orderAmount:
          nano: 5
          currency: currency
          units: units
        price:
          nano: 5
          currency: currency
          units: units
        aciValue:
          nano: 6
          units: units
        secValueDate: 2000-01-23T04:56:07.000+00:00
        direction: direction
        classCode: classCode
        ticker: ticker
        quantity: quantity
        deliveryType: deliveryType
        tradeDatetime: 2000-01-23T04:56:07.000+00:00
        exchangeCommission:
          nano: 5
          currency: currency
          units: units
        brokerStatus: brokerStatus
        totalOrderAmount:
          nano: 5
          currency: currency
          units: units
        separateAgreementNumber: separateAgreementNumber
        clearValueDate: 2000-01-23T04:56:07.000+00:00
        name: name
        exchange: exchange
        separateAgreementType: separateAgreementType
        tradeId: tradeId
        party: party
      properties:
        tradeId:
          type: string
        orderId:
          type: string
        figi:
          type: string
        executeSign:
          type: string
        tradeDatetime:
          format: date-time
          type: string
        exchange:
          type: string
        classCode:
          type: string
        direction:
          type: string
        name:
          type: string
        ticker:
          type: string
        price:
          $ref: '#/components/schemas/v1MoneyValue'
        quantity:
          format: int64
          type: string
        orderAmount:
          $ref: '#/components/schemas/v1MoneyValue'
        aciValue:
          $ref: '#/components/schemas/v1Quotation'
        totalOrderAmount:
          $ref: '#/components/schemas/v1MoneyValue'
        brokerCommission:
          $ref: '#/components/schemas/v1MoneyValue'
        exchangeCommission:
          $ref: '#/components/schemas/v1MoneyValue'
        exchangeClearingCommission:
          $ref: '#/components/schemas/v1MoneyValue'
        repoRate:
          $ref: '#/components/schemas/v1Quotation'
        party:
          type: string
        clearValueDate:
          format: date-time
          type: string
        secValueDate:
          format: date-time
          type: string
        brokerStatus:
          type: string
        separateAgreementType:
          type: string
        separateAgreementNumber:
          type: string
        separateAgreementDate:
          type: string
        deliveryType:
          type: string
      type: object
    v1BrokerReportRequest:
      properties:
        generateBrokerReportRequest:
          $ref: '#/components/schemas/v1GenerateBrokerReportRequest'
        getBrokerReportRequest:
          $ref: '#/components/schemas/v1GetBrokerReportRequest'
      type: object
    v1BrokerReportResponse:
      example:
        generateBrokerReportResponse:
          taskId: taskId
        getBrokerReportResponse:
          brokerReport:
          - exchangeClearingCommission:
              nano: 5
              currency: currency
              units: units
            separateAgreementDate: separateAgreementDate
            orderId: orderId
            figi: figi
            executeSign: executeSign
            brokerCommission:
              nano: 5
              currency: currency
              units: units
            repoRate:
              nano: 6
              units: units
            orderAmount:
              nano: 5
              currency: currency
              units: units
            price:
              nano: 5
              currency: currency
              units: units
            aciValue:
              nano: 6
              units: units
            secValueDate: 2000-01-23T04:56:07.000+00:00
            direction: direction
            classCode: classCode
            ticker: ticker
            quantity: quantity
            deliveryType: deliveryType
            tradeDatetime: 2000-01-23T04:56:07.000+00:00
            exchangeCommission:
              nano: 5
              currency: currency
              units: units
            brokerStatus: brokerStatus
            totalOrderAmount:
              nano: 5
              currency: currency
              units: units
            separateAgreementNumber: separateAgreementNumber
            clearValueDate: 2000-01-23T04:56:07.000+00:00
            name: name
            exchange: exchange
            separateAgreementType: separateAgreementType
            tradeId: tradeId
            party: party
          - exchangeClearingCommission:
              nano: 5
              currency: currency
              units: units
            separateAgreementDate: separateAgreementDate
            orderId: orderId
            figi: figi
            executeSign: executeSign
            brokerCommission:
              nano: 5
              currency: currency
              units: units
            repoRate:
              nano: 6
              units: units
            orderAmount:
              nano: 5
              currency: currency
              units: units
            price:
              nano: 5
              currency: currency
              units: units
            aciValue:
              nano: 6
              units: units
            secValueDate: 2000-01-23T04:56:07.000+00:00
            direction: direction
            classCode: classCode
            ticker: ticker
            quantity: quantity
            deliveryType: deliveryType
            tradeDatetime: 2000-01-23T04:56:07.000+00:00
            exchangeCommission:
              nano: 5
              currency: currency
              units: units
            brokerStatus: brokerStatus
            totalOrderAmount:
              nano: 5
              currency: currency
              units: units
            separateAgreementNumber: separateAgreementNumber
            clearValueDate: 2000-01-23T04:56:07.000+00:00
            name: name
            exchange: exchange
            separateAgreementType: separateAgreementType
            tradeId: tradeId
            party: party
          pagesCount: 6
          page: 1
          itemsCount: 0
      properties:
        generateBrokerReportResponse:
          $ref: '#/components/schemas/v1GenerateBrokerReportResponse'
        getBrokerReportResponse:
          $ref: '#/components/schemas/v1GetBrokerReportResponse'
      type: object
    v1CancelOrderRequest:
      description: Запрос отмены торгового поручения.
      properties:
        accountId:
          type: string
        orderId:
          type: string
      type: object
    v1CancelOrderResponse:
      description: Результат отмены торгового поручения.
      example:
        time: 2000-01-23T04:56:07.000+00:00
      properties:
        time:
          format: date-time
          type: string
      type: object
    v1CancelStopOrderRequest:
      description: Запрос отмены выставленной стоп-заявки.
      properties:
        accountId:
          type: string
        stopOrderId:
          type: string
      type: object
    v1CancelStopOrderResponse:
      description: Результат отмены выставленной стоп-заявки.
      example:
        time: 2000-01-23T04:56:07.000+00:00
      properties:
        time:
          format: date-time
          type: string
      type: object
    v1CandleInterval:
      default: CANDLE_INTERVAL_UNSPECIFIED
      description: Интервал свечей.
      enum:
      - CANDLE_INTERVAL_UNSPECIFIED
      - CANDLE_INTERVAL_1_MIN
      - CANDLE_INTERVAL_5_MIN
      - CANDLE_INTERVAL_15_MIN
      - CANDLE_INTERVAL_HOUR
      - CANDLE_INTERVAL_DAY
      type: string
    v1CloseSandboxAccountRequest:
      description: Запрос закрытия счёта в песочнице.
      properties:
        accountId:
          type: string
      type: object
    v1CloseSandboxAccountResponse:
      description: Результат закрытия счёта в песочнице.
      type: object
    v1Coupon:
      description: Объект передачи информации о купоне облигации.
      example:
        fixDate: 2000-01-23T04:56:07.000+00:00
        couponPeriod: 0
        couponNumber: couponNumber
        couponEndDate: 2000-01-23T04:56:07.000+00:00
        figi: figi
        couponDate: 2000-01-23T04:56:07.000+00:00
        couponStartDate: 2000-01-23T04:56:07.000+00:00
        payOneBond:
          nano: 5
          currency: currency
          units: units
      properties:
        figi:
          type: string
        couponDate:
          format: date-time
          type: string
        couponNumber:
          format: int64
          type: string
        fixDate:
          format: date-time
          type: string
        payOneBond:
          $ref: '#/components/schemas/v1MoneyValue'
        couponType:
          $ref: '#/components/schemas/v1CouponType'
        couponStartDate:
          format: date-time
          type: string
        couponEndDate:
          format: date-time
          type: string
        couponPeriod:
          format: int32
          type: integer
      type: object
    v1CouponType:
      default: COUPON_TYPE_UNSPECIFIED
      description: Тип купонов.
      enum:
      - COUPON_TYPE_UNSPECIFIED
      - COUPON_TYPE_CONSTANT
      - COUPON_TYPE_FLOATING
      - COUPON_TYPE_DISCOUNT
      - COUPON_TYPE_MORTGAGE
      - COUPON_TYPE_FIX
      - COUPON_TYPE_VARIABLE
      - COUPON_TYPE_OTHER
      type: string
    v1CurrenciesResponse:
      description: Данные по валютам.
      example:
        instruments:
        - isoCurrencyName: isoCurrencyName
          figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          dlong:
            nano: 6
            units: units
          nominal:
            nano: 5
            currency: currency
            units: units
          sellAvailableFlag: true
          currency: currency
          buyAvailableFlag: true
          classCode: classCode
          ticker: ticker
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          name: name
          exchange: exchange
          countryOfRiskName: countryOfRiskName
          isin: isin
        - isoCurrencyName: isoCurrencyName
          figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          dlong:
            nano: 6
            units: units
          nominal:
            nano: 5
            currency: currency
            units: units
          sellAvailableFlag: true
          currency: currency
          buyAvailableFlag: true
          classCode: classCode
          ticker: ticker
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          name: name
          exchange: exchange
          countryOfRiskName: countryOfRiskName
          isin: isin
      properties:
        instruments:
          items:
            $ref: '#/components/schemas/v1Currency'
          type: array
      type: object
    v1Currency:
      description: Объект передачи информации о валюте.
      example:
        isoCurrencyName: isoCurrencyName
        figi: figi
        dshortMin:
          nano: 6
          units: units
        countryOfRisk: countryOfRisk
        lot: 0
        dlong:
          nano: 6
          units: units
        nominal:
          nano: 5
          currency: currency
          units: units
        sellAvailableFlag: true
        currency: currency
        buyAvailableFlag: true
        classCode: classCode
        ticker: ticker
        apiTradeAvailableFlag: true
        dlongMin:
          nano: 6
          units: units
        shortEnabledFlag: true
        kshort:
          nano: 6
          units: units
        minPriceIncrement:
          nano: 6
          units: units
        otcFlag: true
        klong:
          nano: 6
          units: units
        dshort:
          nano: 6
          units: units
        name: name
        exchange: exchange
        countryOfRiskName: countryOfRiskName
        isin: isin
      properties:
        figi:
          type: string
        ticker:
          type: string
        classCode:
          type: string
        isin:
          type: string
        lot:
          format: int32
          type: integer
        currency:
          type: string
        klong:
          $ref: '#/components/schemas/v1Quotation'
        kshort:
          $ref: '#/components/schemas/v1Quotation'
        dlong:
          $ref: '#/components/schemas/v1Quotation'
        dshort:
          $ref: '#/components/schemas/v1Quotation'
        dlongMin:
          $ref: '#/components/schemas/v1Quotation'
        dshortMin:
          $ref: '#/components/schemas/v1Quotation'
        shortEnabledFlag:
          type: boolean
        name:
          type: string
        exchange:
          type: string
        nominal:
          $ref: '#/components/schemas/v1MoneyValue'
        countryOfRisk:
          type: string
        countryOfRiskName:
          type: string
        tradingStatus:
          $ref: '#/components/schemas/v1SecurityTradingStatus'
        otcFlag:
          type: boolean
        buyAvailableFlag:
          type: boolean
        sellAvailableFlag:
          type: boolean
        isoCurrencyName:
          type: string
        minPriceIncrement:
          $ref: '#/components/schemas/v1Quotation'
        apiTradeAvailableFlag:
          type: boolean
      type: object
    v1CurrencyResponse:
      description: Данные по валюте.
      example:
        instrument:
          isoCurrencyName: isoCurrencyName
          figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          dlong:
            nano: 6
            units: units
          nominal:
            nano: 5
            currency: currency
            units: units
          sellAvailableFlag: true
          currency: currency
          buyAvailableFlag: true
          classCode: classCode
          ticker: ticker
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          name: name
          exchange: exchange
          countryOfRiskName: countryOfRiskName
          isin: isin
      properties:
        instrument:
          $ref: '#/components/schemas/v1Currency'
      type: object
    v1Dividend:
      description: Информация о выплате.
      example:
        declaredDate: 2000-01-23T04:56:07.000+00:00
        createdAt: 2000-01-23T04:56:07.000+00:00
        recordDate: 2000-01-23T04:56:07.000+00:00
        yieldValue:
          nano: 6
          units: units
        closePrice:
          nano: 5
          currency: currency
          units: units
        paymentDate: 2000-01-23T04:56:07.000+00:00
        regularity: regularity
        dividendNet:
          nano: 5
          currency: currency
          units: units
        lastBuyDate: 2000-01-23T04:56:07.000+00:00
        dividendType: dividendType
      properties:
        dividendNet:
          $ref: '#/components/schemas/v1MoneyValue'
        paymentDate:
          format: date-time
          type: string
        declaredDate:
          format: date-time
          type: string
        lastBuyDate:
          format: date-time
          type: string
        dividendType:
          type: string
        recordDate:
          format: date-time
          type: string
        regularity:
          type: string
        closePrice:
          $ref: '#/components/schemas/v1MoneyValue'
        yieldValue:
          $ref: '#/components/schemas/v1Quotation'
        createdAt:
          format: date-time
          type: string
      type: object
    v1DividendsForeignIssuerReport:
      description: Отчёт "Справка о доходах за пределами РФ".
      example:
        issuerCountry: issuerCountry
        externalCommission:
          nano: 6
          units: units
        securityName: securityName
        dividendGross:
          nano: 6
          units: units
        quantity: quantity
        dividendAmount:
          nano: 6
          units: units
        recordDate: 2000-01-23T04:56:07.000+00:00
        dividend:
          nano: 6
          units: units
        tax:
          nano: 6
          units: units
        currency: currency
        paymentDate: 2000-01-23T04:56:07.000+00:00
        isin: isin
      properties:
        recordDate:
          format: date-time
          type: string
        paymentDate:
          format: date-time
          type: string
        securityName:
          type: string
        isin:
          type: string
        issuerCountry:
          type: string
        quantity:
          format: int64
          type: string
        dividend:
          $ref: '#/components/schemas/v1Quotation'
        externalCommission:
          $ref: '#/components/schemas/v1Quotation'
        dividendGross:
          $ref: '#/components/schemas/v1Quotation'
        tax:
          $ref: '#/components/schemas/v1Quotation'
        dividendAmount:
          $ref: '#/components/schemas/v1Quotation'
        currency:
          type: string
      type: object
    v1Etf:
      description: Объект передачи информации об инвестиционном фонде.
      example:
        releasedDate: 2000-01-23T04:56:07.000+00:00
        fixedCommission:
          nano: 6
          units: units
        figi: figi
        dshortMin:
          nano: 6
          units: units
        countryOfRisk: countryOfRisk
        lot: 0
        dlong:
          nano: 6
          units: units
        sellAvailableFlag: true
        currency: currency
        sector: sector
        buyAvailableFlag: true
        classCode: classCode
        focusType: focusType
        ticker: ticker
        apiTradeAvailableFlag: true
        dlongMin:
          nano: 6
          units: units
        shortEnabledFlag: true
        kshort:
          nano: 6
          units: units
        minPriceIncrement:
          nano: 6
          units: units
        otcFlag: true
        klong:
          nano: 6
          units: units
        dshort:
          nano: 6
          units: units
        rebalancingFreq: rebalancingFreq
        name: name
        numShares:
          nano: 6
          units: units
        exchange: exchange
        countryOfRiskName: countryOfRiskName
        isin: isin
      properties:
        figi:
          type: string
        ticker:
          type: string
        classCode:
          type: string
        isin:
          type: string
        lot:
          format: int32
          type: integer
        currency:
          type: string
        klong:
          $ref: '#/components/schemas/v1Quotation'
        kshort:
          $ref: '#/components/schemas/v1Quotation'
        dlong:
          $ref: '#/components/schemas/v1Quotation'
        dshort:
          $ref: '#/components/schemas/v1Quotation'
        dlongMin:
          $ref: '#/components/schemas/v1Quotation'
        dshortMin:
          $ref: '#/components/schemas/v1Quotation'
        shortEnabledFlag:
          type: boolean
        name:
          type: string
        exchange:
          type: string
        fixedCommission:
          $ref: '#/components/schemas/v1Quotation'
        focusType:
          type: string
        releasedDate:
          format: date-time
          type: string
        numShares:
          $ref: '#/components/schemas/v1Quotation'
        countryOfRisk:
          type: string
        countryOfRiskName:
          type: string
        sector:
          type: string
        rebalancingFreq:
          type: string
        tradingStatus:
          $ref: '#/components/schemas/v1SecurityTradingStatus'
        otcFlag:
          type: boolean
        buyAvailableFlag:
          type: boolean
        sellAvailableFlag:
          type: boolean
        minPriceIncrement:
          $ref: '#/components/schemas/v1Quotation'
        apiTradeAvailableFlag:
          type: boolean
      type: object
    v1EtfResponse:
      description: Данные по фонду.
      example:
        instrument:
          releasedDate: 2000-01-23T04:56:07.000+00:00
          fixedCommission:
            nano: 6
            units: units
          figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          dlong:
            nano: 6
            units: units
          sellAvailableFlag: true
          currency: currency
          sector: sector
          buyAvailableFlag: true
          classCode: classCode
          focusType: focusType
          ticker: ticker
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          rebalancingFreq: rebalancingFreq
          name: name
          numShares:
            nano: 6
            units: units
          exchange: exchange
          countryOfRiskName: countryOfRiskName
          isin: isin
      properties:
        instrument:
          $ref: '#/components/schemas/v1Etf'
      type: object
    v1EtfsResponse:
      description: Данные по фондам.
      example:
        instruments:
        - releasedDate: 2000-01-23T04:56:07.000+00:00
          fixedCommission:
            nano: 6
            units: units
          figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          dlong:
            nano: 6
            units: units
          sellAvailableFlag: true
          currency: currency
          sector: sector
          buyAvailableFlag: true
          classCode: classCode
          focusType: focusType
          ticker: ticker
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          rebalancingFreq: rebalancingFreq
          name: name
          numShares:
            nano: 6
            units: units
          exchange: exchange
          countryOfRiskName: countryOfRiskName
          isin: isin
        - releasedDate: 2000-01-23T04:56:07.000+00:00
          fixedCommission:
            nano: 6
            units: units
          figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          dlong:
            nano: 6
            units: units
          sellAvailableFlag: true
          currency: currency
          sector: sector
          buyAvailableFlag: true
          classCode: classCode
          focusType: focusType
          ticker: ticker
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          rebalancingFreq: rebalancingFreq
          name: name
          numShares:
            nano: 6
            units: units
          exchange: exchange
          countryOfRiskName: countryOfRiskName
          isin: isin
      properties:
        instruments:
          items:
            $ref: '#/components/schemas/v1Etf'
          type: array
      type: object
    v1Future:
      description: Объект передачи информации о фьючерсе.
      example:
        figi: figi
        dshortMin:
          nano: 6
          units: units
        countryOfRisk: countryOfRisk
        lot: 0
        futuresType: futuresType
        dlong:
          nano: 6
          units: units
        lastTradeDate: 2000-01-23T04:56:07.000+00:00
        sellAvailableFlag: true
        currency: currency
        sector: sector
        expirationDate: 2000-01-23T04:56:07.000+00:00
        buyAvailableFlag: true
        classCode: classCode
        ticker: ticker
        firstTradeDate: 2000-01-23T04:56:07.000+00:00
        basicAssetSize:
          nano: 6
          units: units
        apiTradeAvailableFlag: true
        dlongMin:
          nano: 6
          units: units
        shortEnabledFlag: true
        kshort:
          nano: 6
          units: units
        assetType: assetType
        minPriceIncrement:
          nano: 6
          units: units
        otcFlag: true
        klong:
          nano: 6
          units: units
        dshort:
          nano: 6
          units: units
        name: name
        basicAsset: basicAsset
        exchange: exchange
        countryOfRiskName: countryOfRiskName
      properties:
        figi:
          type: string
        ticker:
          type: string
        classCode:
          type: string
        lot:
          format: int32
          type: integer
        currency:
          type: string
        klong:
          $ref: '#/components/schemas/v1Quotation'
        kshort:
          $ref: '#/components/schemas/v1Quotation'
        dlong:
          $ref: '#/components/schemas/v1Quotation'
        dshort:
          $ref: '#/components/schemas/v1Quotation'
        dlongMin:
          $ref: '#/components/schemas/v1Quotation'
        dshortMin:
          $ref: '#/components/schemas/v1Quotation'
        shortEnabledFlag:
          type: boolean
        name:
          type: string
        exchange:
          type: string
        firstTradeDate:
          format: date-time
          type: string
        lastTradeDate:
          format: date-time
          type: string
        futuresType:
          type: string
        assetType:
          type: string
        basicAsset:
          type: string
        basicAssetSize:
          $ref: '#/components/schemas/v1Quotation'
        countryOfRisk:
          type: string
        countryOfRiskName:
          type: string
        sector:
          type: string
        expirationDate:
          format: date-time
          type: string
        tradingStatus:
          $ref: '#/components/schemas/v1SecurityTradingStatus'
        otcFlag:
          type: boolean
        buyAvailableFlag:
          type: boolean
        sellAvailableFlag:
          type: boolean
        minPriceIncrement:
          $ref: '#/components/schemas/v1Quotation'
        apiTradeAvailableFlag:
          type: boolean
      type: object
    v1FutureResponse:
      description: Данные по фьючерсу.
      example:
        instrument:
          figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          futuresType: futuresType
          dlong:
            nano: 6
            units: units
          lastTradeDate: 2000-01-23T04:56:07.000+00:00
          sellAvailableFlag: true
          currency: currency
          sector: sector
          expirationDate: 2000-01-23T04:56:07.000+00:00
          buyAvailableFlag: true
          classCode: classCode
          ticker: ticker
          firstTradeDate: 2000-01-23T04:56:07.000+00:00
          basicAssetSize:
            nano: 6
            units: units
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          assetType: assetType
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          name: name
          basicAsset: basicAsset
          exchange: exchange
          countryOfRiskName: countryOfRiskName
      properties:
        instrument:
          $ref: '#/components/schemas/v1Future'
      type: object
    v1FuturesResponse:
      description: Данные по фьючерсам.
      example:
        instruments:
        - figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          futuresType: futuresType
          dlong:
            nano: 6
            units: units
          lastTradeDate: 2000-01-23T04:56:07.000+00:00
          sellAvailableFlag: true
          currency: currency
          sector: sector
          expirationDate: 2000-01-23T04:56:07.000+00:00
          buyAvailableFlag: true
          classCode: classCode
          ticker: ticker
          firstTradeDate: 2000-01-23T04:56:07.000+00:00
          basicAssetSize:
            nano: 6
            units: units
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          assetType: assetType
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          name: name
          basicAsset: basicAsset
          exchange: exchange
          countryOfRiskName: countryOfRiskName
        - figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          futuresType: futuresType
          dlong:
            nano: 6
            units: units
          lastTradeDate: 2000-01-23T04:56:07.000+00:00
          sellAvailableFlag: true
          currency: currency
          sector: sector
          expirationDate: 2000-01-23T04:56:07.000+00:00
          buyAvailableFlag: true
          classCode: classCode
          ticker: ticker
          firstTradeDate: 2000-01-23T04:56:07.000+00:00
          basicAssetSize:
            nano: 6
            units: units
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          assetType: assetType
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          name: name
          basicAsset: basicAsset
          exchange: exchange
          countryOfRiskName: countryOfRiskName
      properties:
        instruments:
          items:
            $ref: '#/components/schemas/v1Future'
          type: array
      type: object
    v1GenerateBrokerReportRequest:
      properties:
        accountId:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
      type: object
    v1GenerateBrokerReportResponse:
      example:
        taskId: taskId
      properties:
        taskId:
          type: string
      type: object
    v1GenerateDividendsForeignIssuerReportRequest:
      description: Объект запроса формирования отчёта "Справка о доходах за пределами
        РФ".
      properties:
        accountId:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
      type: object
    v1GenerateDividendsForeignIssuerReportResponse:
      description: Объект результата задачи запуска формирования отчёта "Справка о
        доходах за пределами РФ".
      example:
        taskId: taskId
      properties:
        taskId:
          type: string
      type: object
    v1GetAccountsRequest:
      description: Запрос получения счетов пользователя.
      type: object
    v1GetAccountsResponse:
      description: Список счетов пользователя.
      example:
        accounts:
        - openedDate: 2000-01-23T04:56:07.000+00:00
          closedDate: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
        - openedDate: 2000-01-23T04:56:07.000+00:00
          closedDate: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
      properties:
        accounts:
          description: Массив счетов клиента.
          items:
            $ref: '#/components/schemas/v1Account'
          type: array
      type: object
    v1GetAccruedInterestsRequest:
      properties:
        figi:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
      title: Запрос НКД по облигации
      type: object
    v1GetAccruedInterestsResponse:
      example:
        accruedInterests:
        - date: 2000-01-23T04:56:07.000+00:00
          valuePercent:
            nano: 6
            units: units
          nominal:
            nano: 6
            units: units
          value:
            nano: 6
            units: units
        - date: 2000-01-23T04:56:07.000+00:00
          valuePercent:
            nano: 6
            units: units
          nominal:
            nano: 6
            units: units
          value:
            nano: 6
            units: units
      properties:
        accruedInterests:
          items:
            $ref: '#/components/schemas/v1AccruedInterest'
          type: array
      title: НКД облигации
      type: object
    v1GetBondCouponsRequest:
      description: Запрос купонов по облигации.
      properties:
        figi:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
      type: object
    v1GetBondCouponsResponse:
      description: Купоны по облигации.
      example:
        events:
        - fixDate: 2000-01-23T04:56:07.000+00:00
          couponPeriod: 0
          couponNumber: couponNumber
          couponEndDate: 2000-01-23T04:56:07.000+00:00
          figi: figi
          couponDate: 2000-01-23T04:56:07.000+00:00
          couponStartDate: 2000-01-23T04:56:07.000+00:00
          payOneBond:
            nano: 5
            currency: currency
            units: units
        - fixDate: 2000-01-23T04:56:07.000+00:00
          couponPeriod: 0
          couponNumber: couponNumber
          couponEndDate: 2000-01-23T04:56:07.000+00:00
          figi: figi
          couponDate: 2000-01-23T04:56:07.000+00:00
          couponStartDate: 2000-01-23T04:56:07.000+00:00
          payOneBond:
            nano: 5
            currency: currency
            units: units
      properties:
        events:
          items:
            $ref: '#/components/schemas/v1Coupon'
          type: array
      type: object
    v1GetBrokerReportRequest:
      properties:
        taskId:
          type: string
        page:
          format: int32
          type: integer
      type: object
    v1GetBrokerReportResponse:
      example:
        brokerReport:
        - exchangeClearingCommission:
            nano: 5
            currency: currency
            units: units
          separateAgreementDate: separateAgreementDate
          orderId: orderId
          figi: figi
          executeSign: executeSign
          brokerCommission:
            nano: 5
            currency: currency
            units: units
          repoRate:
            nano: 6
            units: units
          orderAmount:
            nano: 5
            currency: currency
            units: units
          price:
            nano: 5
            currency: currency
            units: units
          aciValue:
            nano: 6
            units: units
          secValueDate: 2000-01-23T04:56:07.000+00:00
          direction: direction
          classCode: classCode
          ticker: ticker
          quantity: quantity
          deliveryType: deliveryType
          tradeDatetime: 2000-01-23T04:56:07.000+00:00
          exchangeCommission:
            nano: 5
            currency: currency
            units: units
          brokerStatus: brokerStatus
          totalOrderAmount:
            nano: 5
            currency: currency
            units: units
          separateAgreementNumber: separateAgreementNumber
          clearValueDate: 2000-01-23T04:56:07.000+00:00
          name: name
          exchange: exchange
          separateAgreementType: separateAgreementType
          tradeId: tradeId
          party: party
        - exchangeClearingCommission:
            nano: 5
            currency: currency
            units: units
          separateAgreementDate: separateAgreementDate
          orderId: orderId
          figi: figi
          executeSign: executeSign
          brokerCommission:
            nano: 5
            currency: currency
            units: units
          repoRate:
            nano: 6
            units: units
          orderAmount:
            nano: 5
            currency: currency
            units: units
          price:
            nano: 5
            currency: currency
            units: units
          aciValue:
            nano: 6
            units: units
          secValueDate: 2000-01-23T04:56:07.000+00:00
          direction: direction
          classCode: classCode
          ticker: ticker
          quantity: quantity
          deliveryType: deliveryType
          tradeDatetime: 2000-01-23T04:56:07.000+00:00
          exchangeCommission:
            nano: 5
            currency: currency
            units: units
          brokerStatus: brokerStatus
          totalOrderAmount:
            nano: 5
            currency: currency
            units: units
          separateAgreementNumber: separateAgreementNumber
          clearValueDate: 2000-01-23T04:56:07.000+00:00
          name: name
          exchange: exchange
          separateAgreementType: separateAgreementType
          tradeId: tradeId
          party: party
        pagesCount: 6
        page: 1
        itemsCount: 0
      properties:
        brokerReport:
          items:
            $ref: '#/components/schemas/v1BrokerReport'
          type: array
        itemsCount:
          format: int32
          type: integer
        pagesCount:
          format: int32
          type: integer
        page:
          format: int32
          type: integer
      type: object
    v1GetCandlesRequest:
      description: Запрос исторических свечей.
      properties:
        figi:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
        interval:
          $ref: '#/components/schemas/v1CandleInterval'
      type: object
    v1GetCandlesResponse:
      description: Список свечей.
      example:
        candles:
        - volume: volume
          high:
            nano: 6
            units: units
          low:
            nano: 6
            units: units
          time: 2000-01-23T04:56:07.000+00:00
          close:
            nano: 6
            units: units
          open:
            nano: 6
            units: units
          isComplete: true
        - volume: volume
          high:
            nano: 6
            units: units
          low:
            nano: 6
            units: units
          time: 2000-01-23T04:56:07.000+00:00
          close:
            nano: 6
            units: units
          open:
            nano: 6
            units: units
          isComplete: true
      properties:
        candles:
          items:
            $ref: '#/components/schemas/v1HistoricCandle'
          type: array
      type: object
    v1GetDividendsForeignIssuerReportRequest:
      description: Объект запроса сформированного отчёта "Справка о доходах за пределами
        РФ".
      properties:
        taskId:
          type: string
        page:
          format: int32
          type: integer
      type: object
    v1GetDividendsForeignIssuerReportResponse:
      example:
        pagesCount: 6
        page: 1
        dividendsForeignIssuerReport:
        - issuerCountry: issuerCountry
          externalCommission:
            nano: 6
            units: units
          securityName: securityName
          dividendGross:
            nano: 6
            units: units
          quantity: quantity
          dividendAmount:
            nano: 6
            units: units
          recordDate: 2000-01-23T04:56:07.000+00:00
          dividend:
            nano: 6
            units: units
          tax:
            nano: 6
            units: units
          currency: currency
          paymentDate: 2000-01-23T04:56:07.000+00:00
          isin: isin
        - issuerCountry: issuerCountry
          externalCommission:
            nano: 6
            units: units
          securityName: securityName
          dividendGross:
            nano: 6
            units: units
          quantity: quantity
          dividendAmount:
            nano: 6
            units: units
          recordDate: 2000-01-23T04:56:07.000+00:00
          dividend:
            nano: 6
            units: units
          tax:
            nano: 6
            units: units
          currency: currency
          paymentDate: 2000-01-23T04:56:07.000+00:00
          isin: isin
        itemsCount: 0
      properties:
        dividendsForeignIssuerReport:
          items:
            $ref: '#/components/schemas/v1DividendsForeignIssuerReport'
          type: array
        itemsCount:
          format: int32
          type: integer
        pagesCount:
          format: int32
          type: integer
        page:
          format: int32
          type: integer
      type: object
    v1GetDividendsForeignIssuerRequest:
      properties:
        generateDivForeignIssuerReport:
          $ref: '#/components/schemas/v1GenerateDividendsForeignIssuerReportRequest'
        getDivForeignIssuerReport:
          $ref: '#/components/schemas/v1GetDividendsForeignIssuerReportRequest'
      type: object
    v1GetDividendsForeignIssuerResponse:
      example:
        generateDivForeignIssuerReportResponse:
          taskId: taskId
        divForeignIssuerReport:
          pagesCount: 6
          page: 1
          dividendsForeignIssuerReport:
          - issuerCountry: issuerCountry
            externalCommission:
              nano: 6
              units: units
            securityName: securityName
            dividendGross:
              nano: 6
              units: units
            quantity: quantity
            dividendAmount:
              nano: 6
              units: units
            recordDate: 2000-01-23T04:56:07.000+00:00
            dividend:
              nano: 6
              units: units
            tax:
              nano: 6
              units: units
            currency: currency
            paymentDate: 2000-01-23T04:56:07.000+00:00
            isin: isin
          - issuerCountry: issuerCountry
            externalCommission:
              nano: 6
              units: units
            securityName: securityName
            dividendGross:
              nano: 6
              units: units
            quantity: quantity
            dividendAmount:
              nano: 6
              units: units
            recordDate: 2000-01-23T04:56:07.000+00:00
            dividend:
              nano: 6
              units: units
            tax:
              nano: 6
              units: units
            currency: currency
            paymentDate: 2000-01-23T04:56:07.000+00:00
            isin: isin
          itemsCount: 0
      properties:
        generateDivForeignIssuerReportResponse:
          $ref: '#/components/schemas/v1GenerateDividendsForeignIssuerReportResponse'
        divForeignIssuerReport:
          $ref: '#/components/schemas/v1GetDividendsForeignIssuerReportResponse'
      type: object
    v1GetDividendsRequest:
      description: Запрос дивидендов.
      properties:
        figi:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
      type: object
    v1GetDividendsResponse:
      description: Дивиденды.
      example:
        dividends:
        - declaredDate: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          recordDate: 2000-01-23T04:56:07.000+00:00
          yieldValue:
            nano: 6
            units: units
          closePrice:
            nano: 5
            currency: currency
            units: units
          paymentDate: 2000-01-23T04:56:07.000+00:00
          regularity: regularity
          dividendNet:
            nano: 5
            currency: currency
            units: units
          lastBuyDate: 2000-01-23T04:56:07.000+00:00
          dividendType: dividendType
        - declaredDate: 2000-01-23T04:56:07.000+00:00
          createdAt: 2000-01-23T04:56:07.000+00:00
          recordDate: 2000-01-23T04:56:07.000+00:00
          yieldValue:
            nano: 6
            units: units
          closePrice:
            nano: 5
            currency: currency
            units: units
          paymentDate: 2000-01-23T04:56:07.000+00:00
          regularity: regularity
          dividendNet:
            nano: 5
            currency: currency
            units: units
          lastBuyDate: 2000-01-23T04:56:07.000+00:00
          dividendType: dividendType
      properties:
        dividends:
          items:
            $ref: '#/components/schemas/v1Dividend'
          type: array
      type: object
    v1GetFuturesMarginRequest:
      properties:
        figi:
          type: string
      title: Запрос информации о фьючерсе
      type: object
    v1GetFuturesMarginResponse:
      example:
        initialMarginOnBuy:
          nano: 5
          currency: currency
          units: units
        initialMarginOnSell:
          nano: 5
          currency: currency
          units: units
        minPriceIncrementAmount:
          nano: 6
          units: units
        minPriceIncrement:
          nano: 6
          units: units
      properties:
        initialMarginOnBuy:
          $ref: '#/components/schemas/v1MoneyValue'
        initialMarginOnSell:
          $ref: '#/components/schemas/v1MoneyValue'
        minPriceIncrement:
          $ref: '#/components/schemas/v1Quotation'
        minPriceIncrementAmount:
          $ref: '#/components/schemas/v1Quotation'
      title: Данные по фьючерсу
      type: object
    v1GetInfoRequest:
      description: Запрос информации о пользователе.
      type: object
    v1GetInfoResponse:
      description: Информация о пользователе.
      example:
        qualifiedForWorkWith:
        - qualifiedForWorkWith
        - qualifiedForWorkWith
        qualStatus: true
        premStatus: true
        tariff: tariff
      properties:
        premStatus:
          type: boolean
        qualStatus:
          type: boolean
        qualifiedForWorkWith:
          items:
            type: string
          type: array
        tariff:
          type: string
      type: object
    v1GetLastPricesRequest:
      description: Запрос получения последних цен.
      properties:
        figi:
          items:
            type: string
          type: array
      type: object
    v1GetLastPricesResponse:
      description: Список последних цен.
      example:
        lastPrices:
        - price:
            nano: 6
            units: units
          figi: figi
          time: 2000-01-23T04:56:07.000+00:00
        - price:
            nano: 6
            units: units
          figi: figi
          time: 2000-01-23T04:56:07.000+00:00
      properties:
        lastPrices:
          items:
            $ref: '#/components/schemas/v1LastPrice'
          type: array
      type: object
    v1GetMarginAttributesRequest:
      properties:
        accountId:
          description: Идентификатор счёта пользователя.
          type: string
      title: Запрос маржинальных показателей по счёту
      type: object
    v1GetMarginAttributesResponse:
      description: Маржинальные показатели по счёту.
      example:
        amountOfMissingFunds:
          nano: 5
          currency: currency
          units: units
        liquidPortfolio:
          nano: 5
          currency: currency
          units: units
        fundsSufficiencyLevel:
          nano: 6
          units: units
        startingMargin:
          nano: 5
          currency: currency
          units: units
        minimalMargin:
          nano: 5
          currency: currency
          units: units
      properties:
        liquidPortfolio:
          $ref: '#/components/schemas/v1MoneyValue'
        startingMargin:
          $ref: '#/components/schemas/v1MoneyValue'
        minimalMargin:
          $ref: '#/components/schemas/v1MoneyValue'
        fundsSufficiencyLevel:
          $ref: '#/components/schemas/v1Quotation'
        amountOfMissingFunds:
          $ref: '#/components/schemas/v1MoneyValue'
      type: object
    v1GetOrderBookRequest:
      description: Запрос стакана.
      properties:
        figi:
          type: string
        depth:
          format: int32
          type: integer
      type: object
    v1GetOrderBookResponse:
      description: Информация о стакане.
      example:
        depth: 0
        asks:
        - quantity: quantity
          price:
            nano: 6
            units: units
        - quantity: quantity
          price:
            nano: 6
            units: units
        bids:
        - quantity: quantity
          price:
            nano: 6
            units: units
        - quantity: quantity
          price:
            nano: 6
            units: units
        limitUp:
          nano: 6
          units: units
        figi: figi
        closePrice:
          nano: 6
          units: units
        limitDown:
          nano: 6
          units: units
        lastPrice:
          nano: 6
          units: units
      properties:
        figi:
          type: string
        depth:
          format: int32
          type: integer
        bids:
          items:
            $ref: '#/components/schemas/v1Order'
          type: array
        asks:
          items:
            $ref: '#/components/schemas/v1Order'
          type: array
        lastPrice:
          $ref: '#/components/schemas/v1Quotation'
        closePrice:
          $ref: '#/components/schemas/v1Quotation'
        limitUp:
          $ref: '#/components/schemas/v1Quotation'
        limitDown:
          $ref: '#/components/schemas/v1Quotation'
      type: object
    v1GetOrderStateRequest:
      description: Запрос получения статуса торгового поручения.
      properties:
        accountId:
          type: string
        orderId:
          type: string
      type: object
    v1GetOrdersRequest:
      description: Запрос получения списка активных торговых поручений.
      properties:
        accountId:
          type: string
      type: object
    v1GetOrdersResponse:
      description: Список активных торговых поручений.
      example:
        orders:
        - orderId: orderId
          figi: figi
          initialOrderPrice:
            nano: 5
            currency: currency
            units: units
          initialCommission:
            nano: 5
            currency: currency
            units: units
          averagePositionPrice:
            nano: 5
            currency: currency
            units: units
          lotsExecuted: lotsExecuted
          totalOrderAmount:
            nano: 5
            currency: currency
            units: units
          lotsRequested: lotsRequested
          stages:
          - quantity: quantity
            price:
              nano: 5
              currency: currency
              units: units
            tradeId: tradeId
          - quantity: quantity
            price:
              nano: 5
              currency: currency
              units: units
            tradeId: tradeId
          executedOrderPrice:
            nano: 5
            currency: currency
            units: units
          executedCommission:
            nano: 5
            currency: currency
            units: units
          initialSecurityPrice:
            nano: 5
            currency: currency
            units: units
          serviceCommission:
            nano: 5
            currency: currency
            units: units
          currency: currency
          orderDate: 2000-01-23T04:56:07.000+00:00
        - orderId: orderId
          figi: figi
          initialOrderPrice:
            nano: 5
            currency: currency
            units: units
          initialCommission:
            nano: 5
            currency: currency
            units: units
          averagePositionPrice:
            nano: 5
            currency: currency
            units: units
          lotsExecuted: lotsExecuted
          totalOrderAmount:
            nano: 5
            currency: currency
            units: units
          lotsRequested: lotsRequested
          stages:
          - quantity: quantity
            price:
              nano: 5
              currency: currency
              units: units
            tradeId: tradeId
          - quantity: quantity
            price:
              nano: 5
              currency: currency
              units: units
            tradeId: tradeId
          executedOrderPrice:
            nano: 5
            currency: currency
            units: units
          executedCommission:
            nano: 5
            currency: currency
            units: units
          initialSecurityPrice:
            nano: 5
            currency: currency
            units: units
          serviceCommission:
            nano: 5
            currency: currency
            units: units
          currency: currency
          orderDate: 2000-01-23T04:56:07.000+00:00
      properties:
        orders:
          items:
            $ref: '#/components/schemas/v1OrderState'
          type: array
      type: object
    v1GetStopOrdersRequest:
      description: Запрос получения списка активных стоп-заявок.
      properties:
        accountId:
          type: string
      type: object
    v1GetStopOrdersResponse:
      description: Список активных стоп-заявок.
      example:
        stopOrders:
        - activationDateTime: 2000-01-23T04:56:07.000+00:00
          stopPrice:
            nano: 5
            currency: currency
            units: units
          lotsRequested: lotsRequested
          expirationTime: 2000-01-23T04:56:07.000+00:00
          price:
            nano: 5
            currency: currency
            units: units
          figi: figi
          currency: currency
          stopOrderId: stopOrderId
          createDate: 2000-01-23T04:56:07.000+00:00
        - activationDateTime: 2000-01-23T04:56:07.000+00:00
          stopPrice:
            nano: 5
            currency: currency
            units: units
          lotsRequested: lotsRequested
          expirationTime: 2000-01-23T04:56:07.000+00:00
          price:
            nano: 5
            currency: currency
            units: units
          figi: figi
          currency: currency
          stopOrderId: stopOrderId
          createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        stopOrders:
          items:
            $ref: '#/components/schemas/v1StopOrder'
          type: array
      type: object
    v1GetTradingStatusRequest:
      description: Запрос получения торгового статуса.
      properties:
        figi:
          type: string
      type: object
    v1GetTradingStatusResponse:
      description: Информация о торговом статусе.
      example:
        limitOrderAvailableFlag: true
        marketOrderAvailableFlag: true
        figi: figi
      properties:
        figi:
          type: string
        tradingStatus:
          $ref: '#/components/schemas/v1SecurityTradingStatus'
        limitOrderAvailableFlag:
          type: boolean
        marketOrderAvailableFlag:
          type: boolean
      type: object
    v1GetUserTariffRequest:
      description: Запрос текущих лимитов пользователя.
      type: object
    v1GetUserTariffResponse:
      description: Текущие лимиты пользователя.
      example:
        unaryLimits:
        - limitPerMinute: 0
          methods:
          - methods
          - methods
        - limitPerMinute: 0
          methods:
          - methods
          - methods
        streamLimits:
        - streams:
          - streams
          - streams
          limit: 6
        - streams:
          - streams
          - streams
          limit: 6
      properties:
        unaryLimits:
          items:
            $ref: '#/components/schemas/v1UnaryLimit'
          type: array
        streamLimits:
          items:
            $ref: '#/components/schemas/v1StreamLimit'
          type: array
      type: object
    v1HistoricCandle:
      description: Информация о свече.
      example:
        volume: volume
        high:
          nano: 6
          units: units
        low:
          nano: 6
          units: units
        time: 2000-01-23T04:56:07.000+00:00
        close:
          nano: 6
          units: units
        open:
          nano: 6
          units: units
        isComplete: true
      properties:
        open:
          $ref: '#/components/schemas/v1Quotation'
        high:
          $ref: '#/components/schemas/v1Quotation'
        low:
          $ref: '#/components/schemas/v1Quotation'
        close:
          $ref: '#/components/schemas/v1Quotation'
        volume:
          format: int64
          type: string
        time:
          format: date-time
          type: string
        isComplete:
          type: boolean
      type: object
    v1Instrument:
      description: Объект передачи основной информации об инструменте.
      example:
        classCode: classCode
        ticker: ticker
        instrumentType: instrumentType
        figi: figi
        dshortMin:
          nano: 6
          units: units
        apiTradeAvailableFlag: true
        dlongMin:
          nano: 6
          units: units
        shortEnabledFlag: true
        kshort:
          nano: 6
          units: units
        countryOfRisk: countryOfRisk
        minPriceIncrement:
          nano: 6
          units: units
        lot: 0
        otcFlag: true
        klong:
          nano: 6
          units: units
        dshort:
          nano: 6
          units: units
        dlong:
          nano: 6
          units: units
        name: name
        sellAvailableFlag: true
        currency: currency
        exchange: exchange
        countryOfRiskName: countryOfRiskName
        isin: isin
        buyAvailableFlag: true
      properties:
        figi:
          type: string
        ticker:
          type: string
        classCode:
          type: string
        isin:
          type: string
        lot:
          format: int32
          type: integer
        currency:
          type: string
        klong:
          $ref: '#/components/schemas/v1Quotation'
        kshort:
          $ref: '#/components/schemas/v1Quotation'
        dlong:
          $ref: '#/components/schemas/v1Quotation'
        dshort:
          $ref: '#/components/schemas/v1Quotation'
        dlongMin:
          $ref: '#/components/schemas/v1Quotation'
        dshortMin:
          $ref: '#/components/schemas/v1Quotation'
        shortEnabledFlag:
          type: boolean
        name:
          type: string
        exchange:
          type: string
        countryOfRisk:
          type: string
        countryOfRiskName:
          type: string
        instrumentType:
          type: string
        tradingStatus:
          $ref: '#/components/schemas/v1SecurityTradingStatus'
        otcFlag:
          type: boolean
        buyAvailableFlag:
          type: boolean
        sellAvailableFlag:
          type: boolean
        minPriceIncrement:
          $ref: '#/components/schemas/v1Quotation'
        apiTradeAvailableFlag:
          type: boolean
      type: object
    v1InstrumentIdType:
      default: INSTRUMENT_ID_UNSPECIFIED
      enum:
      - INSTRUMENT_ID_UNSPECIFIED
      - INSTRUMENT_ID_TYPE_FIGI
      - INSTRUMENT_ID_TYPE_TICKER
      title: 'Тип идентификатора инструмента. Подробнее об идентификации инструментов:
        [Идентификация инструментов](https://tinkoff.github.io/investAPI/faq_identification/)'
      type: string
    v1InstrumentRequest:
      description: Запрос получения инструмента по идентификатору.
      properties:
        idType:
          $ref: '#/components/schemas/v1InstrumentIdType'
        classCode:
          type: string
        id:
          type: string
      type: object
    v1InstrumentResponse:
      description: Данные по инструменту.
      example:
        instrument:
          classCode: classCode
          ticker: ticker
          instrumentType: instrumentType
          figi: figi
          dshortMin:
            nano: 6
            units: units
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          minPriceIncrement:
            nano: 6
            units: units
          lot: 0
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          dlong:
            nano: 6
            units: units
          name: name
          sellAvailableFlag: true
          currency: currency
          exchange: exchange
          countryOfRiskName: countryOfRiskName
          isin: isin
          buyAvailableFlag: true
      properties:
        instrument:
          $ref: '#/components/schemas/v1Instrument'
      type: object
    v1InstrumentStatus:
      default: INSTRUMENT_STATUS_UNSPECIFIED
      description: Статус запрашиваемых инструментов.
      enum:
      - INSTRUMENT_STATUS_UNSPECIFIED
      - INSTRUMENT_STATUS_BASE
      - INSTRUMENT_STATUS_ALL
      type: string
    v1InstrumentsRequest:
      description: Запрос получения инструментов.
      properties:
        instrumentStatus:
          $ref: '#/components/schemas/v1InstrumentStatus'
      type: object
    v1LastPrice:
      description: Информация о цене.
      example:
        price:
          nano: 6
          units: units
        figi: figi
        time: 2000-01-23T04:56:07.000+00:00
      properties:
        figi:
          type: string
        price:
          $ref: '#/components/schemas/v1Quotation'
        time:
          format: date-time
          type: string
      type: object
    v1MoneyValue:
      example:
        nano: 5
        currency: currency
        units: units
      properties:
        currency:
          title: строковый ISO-код валюты
          type: string
        units:
          format: int64
          title: целая часть суммы, может быть отрицательным числом
          type: string
        nano:
          format: int32
          title: дробная часть суммы, может быть отрицательным числом
          type: integer
      title: Денежная сумма в определенной валюте
      type: object
    v1OpenSandboxAccountRequest:
      description: Запрос открытия счёта в песочнице.
      type: object
    v1OpenSandboxAccountResponse:
      description: Номер открытого счёта в песочнице.
      example:
        accountId: accountId
      properties:
        accountId:
          type: string
      type: object
    v1Operation:
      description: Данные по операции.
      example:
        date: 2000-01-23T04:56:07.000+00:00
        instrumentType: instrumentType
        quantity: quantity
        parentOperationId: parentOperationId
        trades:
        - dateTime: 2000-01-23T04:56:07.000+00:00
          quantity: quantity
          price:
            nano: 5
            currency: currency
            units: units
          tradeId: tradeId
        - dateTime: 2000-01-23T04:56:07.000+00:00
          quantity: quantity
          price:
            nano: 5
            currency: currency
            units: units
          tradeId: tradeId
        figi: figi
        type: type
        price:
          nano: 5
          currency: currency
          units: units
        currency: currency
        payment:
          nano: 5
          currency: currency
          units: units
        id: id
        quantityRest: quantityRest
      properties:
        id:
          type: string
        parentOperationId:
          type: string
        currency:
          type: string
        payment:
          $ref: '#/components/schemas/v1MoneyValue'
        price:
          $ref: '#/components/schemas/v1MoneyValue'
        state:
          $ref: '#/components/schemas/v1OperationState'
        quantity:
          format: int64
          type: string
        quantityRest:
          format: int64
          type: string
        figi:
          type: string
        instrumentType:
          type: string
        date:
          format: date-time
          type: string
        type:
          type: string
        operationType:
          $ref: '#/components/schemas/v1OperationType'
        trades:
          items:
            $ref: '#/components/schemas/v1OperationTrade'
          type: array
      type: object
    v1OperationState:
      default: OPERATION_STATE_UNSPECIFIED
      enum:
      - OPERATION_STATE_UNSPECIFIED
      - OPERATION_STATE_EXECUTED
      - OPERATION_STATE_CANCELED
      title: Статус запрашиваемых операций
      type: string
    v1OperationTrade:
      description: Сделка по операции.
      example:
        dateTime: 2000-01-23T04:56:07.000+00:00
        quantity: quantity
        price:
          nano: 5
          currency: currency
          units: units
        tradeId: tradeId
      properties:
        tradeId:
          type: string
        dateTime:
          format: date-time
          type: string
        quantity:
          format: int64
          type: string
        price:
          $ref: '#/components/schemas/v1MoneyValue'
      type: object
    v1OperationType:
      default: OPERATION_TYPE_UNSPECIFIED
      enum:
      - OPERATION_TYPE_UNSPECIFIED
      - OPERATION_TYPE_INPUT
      - OPERATION_TYPE_BOND_TAX
      - OPERATION_TYPE_OUTPUT_SECURITIES
      - OPERATION_TYPE_OVERNIGHT
      - OPERATION_TYPE_TAX
      - OPERATION_TYPE_BOND_REPAYMENT_FULL
      - OPERATION_TYPE_SELL_CARD
      - OPERATION_TYPE_DIVIDEND_TAX
      - OPERATION_TYPE_OUTPUT
      - OPERATION_TYPE_BOND_REPAYMENT
      - OPERATION_TYPE_TAX_CORRECTION
      - OPERATION_TYPE_SERVICE_FEE
      - OPERATION_TYPE_BENEFIT_TAX
      - OPERATION_TYPE_MARGIN_FEE
      - OPERATION_TYPE_BUY
      - OPERATION_TYPE_BUY_CARD
      - OPERATION_TYPE_INPUT_SECURITIES
      - OPERATION_TYPE_SELL_MARGIN
      - OPERATION_TYPE_BROKER_FEE
      - OPERATION_TYPE_BUY_MARGIN
      - OPERATION_TYPE_DIVIDEND
      - OPERATION_TYPE_SELL
      - OPERATION_TYPE_COUPON
      - OPERATION_TYPE_SUCCESS_FEE
      - OPERATION_TYPE_DIVIDEND_TRANSFER
      - OPERATION_TYPE_ACCRUING_VARMARGIN
      - OPERATION_TYPE_WRITING_OFF_VARMARGIN
      - OPERATION_TYPE_DELIVERY_BUY
      - OPERATION_TYPE_DELIVERY_SELL
      - OPERATION_TYPE_TRACK_MFEE
      - OPERATION_TYPE_TRACK_PFEE
      - OPERATION_TYPE_TAX_PROGRESSIVE
      - OPERATION_TYPE_BOND_TAX_PROGRESSIVE
      - OPERATION_TYPE_DIVIDEND_TAX_PROGRESSIVE
      - OPERATION_TYPE_BENEFIT_TAX_PROGRESSIVE
      - OPERATION_TYPE_TAX_CORRECTION_PROGRESSIVE
      - OPERATION_TYPE_TAX_REPO_PROGRESSIVE
      - OPERATION_TYPE_TAX_REPO
      - OPERATION_TYPE_TAX_REPO_HOLD
      - OPERATION_TYPE_TAX_REPO_REFUND
      - OPERATION_TYPE_TAX_REPO_HOLD_PROGRESSIVE
      - OPERATION_TYPE_TAX_REPO_REFUND_PROGRESSIVE
      - OPERATION_TYPE_DIV_EXT
      - OPERATION_TYPE_TAX_CORRECTION_COUPON
      title: Тип операции
      type: string
    v1OperationsRequest:
      description: Запрос получения списка операций по счёту.
      properties:
        accountId:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
        state:
          $ref: '#/components/schemas/v1OperationState'
        figi:
          type: string
      type: object
    v1OperationsResponse:
      description: Список операций.
      example:
        operations:
        - date: 2000-01-23T04:56:07.000+00:00
          instrumentType: instrumentType
          quantity: quantity
          parentOperationId: parentOperationId
          trades:
          - dateTime: 2000-01-23T04:56:07.000+00:00
            quantity: quantity
            price:
              nano: 5
              currency: currency
              units: units
            tradeId: tradeId
          - dateTime: 2000-01-23T04:56:07.000+00:00
            quantity: quantity
            price:
              nano: 5
              currency: currency
              units: units
            tradeId: tradeId
          figi: figi
          type: type
          price:
            nano: 5
            currency: currency
            units: units
          currency: currency
          payment:
            nano: 5
            currency: currency
            units: units
          id: id
          quantityRest: quantityRest
        - date: 2000-01-23T04:56:07.000+00:00
          instrumentType: instrumentType
          quantity: quantity
          parentOperationId: parentOperationId
          trades:
          - dateTime: 2000-01-23T04:56:07.000+00:00
            quantity: quantity
            price:
              nano: 5
              currency: currency
              units: units
            tradeId: tradeId
          - dateTime: 2000-01-23T04:56:07.000+00:00
            quantity: quantity
            price:
              nano: 5
              currency: currency
              units: units
            tradeId: tradeId
          figi: figi
          type: type
          price:
            nano: 5
            currency: currency
            units: units
          currency: currency
          payment:
            nano: 5
            currency: currency
            units: units
          id: id
          quantityRest: quantityRest
      properties:
        operations:
          items:
            $ref: '#/components/schemas/v1Operation'
          type: array
      type: object
    v1Order:
      description: Массив предложений/спроса.
      example:
        quantity: quantity
        price:
          nano: 6
          units: units
      properties:
        price:
          $ref: '#/components/schemas/v1Quotation'
        quantity:
          format: int64
          type: string
      type: object
    v1OrderDirection:
      default: ORDER_DIRECTION_UNSPECIFIED
      enum:
      - ORDER_DIRECTION_UNSPECIFIED
      - ORDER_DIRECTION_BUY
      - ORDER_DIRECTION_SELL
      title: Направление операции
      type: string
    v1OrderExecutionReportStatus:
      default: EXECUTION_REPORT_STATUS_UNSPECIFIED
      enum:
      - EXECUTION_REPORT_STATUS_UNSPECIFIED
      - EXECUTION_REPORT_STATUS_FILL
      - EXECUTION_REPORT_STATUS_REJECTED
      - EXECUTION_REPORT_STATUS_CANCELLED
      - EXECUTION_REPORT_STATUS_NEW
      - EXECUTION_REPORT_STATUS_PARTIALLYFILL
      title: Текущий статус заявки (поручения)
      type: string
    v1OrderStage:
      description: Сделки в рамках торгового поручения.
      example:
        quantity: quantity
        price:
          nano: 5
          currency: currency
          units: units
        tradeId: tradeId
      properties:
        price:
          $ref: '#/components/schemas/v1MoneyValue'
        quantity:
          format: int64
          type: string
        tradeId:
          type: string
      type: object
    v1OrderState:
      description: Информация о торговом поручении.
      example:
        orderId: orderId
        figi: figi
        initialOrderPrice:
          nano: 5
          currency: currency
          units: units
        initialCommission:
          nano: 5
          currency: currency
          units: units
        averagePositionPrice:
          nano: 5
          currency: currency
          units: units
        lotsExecuted: lotsExecuted
        totalOrderAmount:
          nano: 5
          currency: currency
          units: units
        lotsRequested: lotsRequested
        stages:
        - quantity: quantity
          price:
            nano: 5
            currency: currency
            units: units
          tradeId: tradeId
        - quantity: quantity
          price:
            nano: 5
            currency: currency
            units: units
          tradeId: tradeId
        executedOrderPrice:
          nano: 5
          currency: currency
          units: units
        executedCommission:
          nano: 5
          currency: currency
          units: units
        initialSecurityPrice:
          nano: 5
          currency: currency
          units: units
        serviceCommission:
          nano: 5
          currency: currency
          units: units
        currency: currency
        orderDate: 2000-01-23T04:56:07.000+00:00
      properties:
        orderId:
          type: string
        executionReportStatus:
          $ref: '#/components/schemas/v1OrderExecutionReportStatus'
        lotsRequested:
          format: int64
          type: string
        lotsExecuted:
          format: int64
          type: string
        initialOrderPrice:
          $ref: '#/components/schemas/v1MoneyValue'
        executedOrderPrice:
          $ref: '#/components/schemas/v1MoneyValue'
        totalOrderAmount:
          $ref: '#/components/schemas/v1MoneyValue'
        averagePositionPrice:
          $ref: '#/components/schemas/v1MoneyValue'
        initialCommission:
          $ref: '#/components/schemas/v1MoneyValue'
        executedCommission:
          $ref: '#/components/schemas/v1MoneyValue'
        figi:
          type: string
        direction:
          $ref: '#/components/schemas/v1OrderDirection'
        initialSecurityPrice:
          $ref: '#/components/schemas/v1MoneyValue'
        stages:
          items:
            $ref: '#/components/schemas/v1OrderStage'
          type: array
        serviceCommission:
          $ref: '#/components/schemas/v1MoneyValue'
        currency:
          type: string
        orderType:
          $ref: '#/components/schemas/v1OrderType'
        orderDate:
          format: date-time
          type: string
      type: object
    v1OrderType:
      default: ORDER_TYPE_UNSPECIFIED
      enum:
      - ORDER_TYPE_UNSPECIFIED
      - ORDER_TYPE_LIMIT
      - ORDER_TYPE_MARKET
      title: Тип заявки
      type: string
    v1PortfolioPosition:
      description: Позиции портфеля.
      example:
        averagePositionPrice:
          nano: 5
          currency: currency
          units: units
        instrumentType: instrumentType
        quantity:
          nano: 6
          units: units
        averagePositionPricePt:
          nano: 6
          units: units
        averagePositionPriceFifo:
          nano: 5
          currency: currency
          units: units
        currentNkd:
          nano: 5
          currency: currency
          units: units
        currentPrice:
          nano: 5
          currency: currency
          units: units
        figi: figi
        expectedYield:
          nano: 6
          units: units
        quantityLots:
          nano: 6
          units: units
      properties:
        figi:
          type: string
        instrumentType:
          type: string
        quantity:
          $ref: '#/components/schemas/v1Quotation'
        averagePositionPrice:
          $ref: '#/components/schemas/v1MoneyValue'
        expectedYield:
          $ref: '#/components/schemas/v1Quotation'
        currentNkd:
          $ref: '#/components/schemas/v1MoneyValue'
        averagePositionPricePt:
          $ref: '#/components/schemas/v1Quotation'
        currentPrice:
          $ref: '#/components/schemas/v1MoneyValue'
        averagePositionPriceFifo:
          $ref: '#/components/schemas/v1MoneyValue'
        quantityLots:
          $ref: '#/components/schemas/v1Quotation'
      type: object
    v1PortfolioRequest:
      description: Запрос получения текущего портфеля по счёту.
      properties:
        accountId:
          type: string
      type: object
    v1PortfolioResponse:
      description: Текущий портфель по счёту.
      example:
        totalAmountBonds:
          nano: 5
          currency: currency
          units: units
        totalAmountFutures:
          nano: 5
          currency: currency
          units: units
        totalAmountCurrencies:
          nano: 5
          currency: currency
          units: units
        expectedYield:
          nano: 6
          units: units
        positions:
        - averagePositionPrice:
            nano: 5
            currency: currency
            units: units
          instrumentType: instrumentType
          quantity:
            nano: 6
            units: units
          averagePositionPricePt:
            nano: 6
            units: units
          averagePositionPriceFifo:
            nano: 5
            currency: currency
            units: units
          currentNkd:
            nano: 5
            currency: currency
            units: units
          currentPrice:
            nano: 5
            currency: currency
            units: units
          figi: figi
          expectedYield:
            nano: 6
            units: units
          quantityLots:
            nano: 6
            units: units
        - averagePositionPrice:
            nano: 5
            currency: currency
            units: units
          instrumentType: instrumentType
          quantity:
            nano: 6
            units: units
          averagePositionPricePt:
            nano: 6
            units: units
          averagePositionPriceFifo:
            nano: 5
            currency: currency
            units: units
          currentNkd:
            nano: 5
            currency: currency
            units: units
          currentPrice:
            nano: 5
            currency: currency
            units: units
          figi: figi
          expectedYield:
            nano: 6
            units: units
          quantityLots:
            nano: 6
            units: units
        totalAmountShares:
          nano: 5
          currency: currency
          units: units
        totalAmountEtf:
          nano: 5
          currency: currency
          units: units
      properties:
        totalAmountShares:
          $ref: '#/components/schemas/v1MoneyValue'
        totalAmountBonds:
          $ref: '#/components/schemas/v1MoneyValue'
        totalAmountEtf:
          $ref: '#/components/schemas/v1MoneyValue'
        totalAmountCurrencies:
          $ref: '#/components/schemas/v1MoneyValue'
        totalAmountFutures:
          $ref: '#/components/schemas/v1MoneyValue'
        expectedYield:
          $ref: '#/components/schemas/v1Quotation'
        positions:
          items:
            $ref: '#/components/schemas/v1PortfolioPosition'
          type: array
      type: object
    v1PositionsFutures:
      description: Баланс фьючерса.
      example:
        blocked: blocked
        balance: balance
        figi: figi
      properties:
        figi:
          type: string
        blocked:
          format: int64
          type: string
        balance:
          format: int64
          type: string
      type: object
    v1PositionsRequest:
      description: Запрос позиций портфеля по счёту.
      properties:
        accountId:
          type: string
      type: object
    v1PositionsResponse:
      description: Список позиций по счёту.
      example:
        limitsLoadingInProgress: true
        money:
        - nano: 5
          currency: currency
          units: units
        - nano: 5
          currency: currency
          units: units
        blocked:
        - nano: 5
          currency: currency
          units: units
        - nano: 5
          currency: currency
          units: units
        futures:
        - blocked: blocked
          balance: balance
          figi: figi
        - blocked: blocked
          balance: balance
          figi: figi
        securities:
        - blocked: blocked
          balance: balance
          figi: figi
        - blocked: blocked
          balance: balance
          figi: figi
      properties:
        money:
          items:
            $ref: '#/components/schemas/v1MoneyValue'
          type: array
        blocked:
          items:
            $ref: '#/components/schemas/v1MoneyValue'
          type: array
        securities:
          items:
            $ref: '#/components/schemas/v1PositionsSecurities'
          type: array
        limitsLoadingInProgress:
          type: boolean
        futures:
          items:
            $ref: '#/components/schemas/v1PositionsFutures'
          type: array
      type: object
    v1PositionsSecurities:
      description: Баланс позиции ценной бумаги.
      example:
        blocked: blocked
        balance: balance
        figi: figi
      properties:
        figi:
          type: string
        blocked:
          format: int64
          type: string
        balance:
          format: int64
          type: string
      type: object
    v1PostOrderRequest:
      description: Запрос выставления торгового поручения.
      properties:
        figi:
          type: string
        quantity:
          format: int64
          type: string
        price:
          $ref: '#/components/schemas/v1Quotation'
        direction:
          $ref: '#/components/schemas/v1OrderDirection'
        accountId:
          type: string
        orderType:
          $ref: '#/components/schemas/v1OrderType'
        orderId:
          type: string
      type: object
    v1PostOrderResponse:
      description: Информация о выставлении поручения.
      example:
        orderId: orderId
        figi: figi
        initialOrderPrice:
          nano: 5
          currency: currency
          units: units
        initialCommission:
          nano: 5
          currency: currency
          units: units
        message: message
        lotsExecuted: lotsExecuted
        totalOrderAmount:
          nano: 5
          currency: currency
          units: units
        lotsRequested: lotsRequested
        initialOrderPricePt:
          nano: 6
          units: units
        executedOrderPrice:
          nano: 5
          currency: currency
          units: units
        executedCommission:
          nano: 5
          currency: currency
          units: units
        initialSecurityPrice:
          nano: 5
          currency: currency
          units: units
        aciValue:
          nano: 5
          currency: currency
          units: units
      properties:
        orderId:
          type: string
        executionReportStatus:
          $ref: '#/components/schemas/v1OrderExecutionReportStatus'
        lotsRequested:
          format: int64
          type: string
        lotsExecuted:
          format: int64
          type: string
        initialOrderPrice:
          $ref: '#/components/schemas/v1MoneyValue'
        executedOrderPrice:
          $ref: '#/components/schemas/v1MoneyValue'
        totalOrderAmount:
          $ref: '#/components/schemas/v1MoneyValue'
        initialCommission:
          $ref: '#/components/schemas/v1MoneyValue'
        executedCommission:
          $ref: '#/components/schemas/v1MoneyValue'
        aciValue:
          $ref: '#/components/schemas/v1MoneyValue'
        figi:
          type: string
        direction:
          $ref: '#/components/schemas/v1OrderDirection'
        initialSecurityPrice:
          $ref: '#/components/schemas/v1MoneyValue'
        orderType:
          $ref: '#/components/schemas/v1OrderType'
        message:
          type: string
        initialOrderPricePt:
          $ref: '#/components/schemas/v1Quotation'
      type: object
    v1PostStopOrderRequest:
      properties:
        figi:
          type: string
        quantity:
          format: int64
          type: string
        price:
          $ref: '#/components/schemas/v1Quotation'
        stopPrice:
          $ref: '#/components/schemas/v1Quotation'
        direction:
          $ref: '#/components/schemas/v1StopOrderDirection'
        accountId:
          type: string
        expirationType:
          $ref: '#/components/schemas/v1StopOrderExpirationType'
        stopOrderType:
          $ref: '#/components/schemas/v1StopOrderType'
        expireDate:
          format: date-time
          type: string
      title: Запрос выставления стоп-заявки
      type: object
    v1PostStopOrderResponse:
      description: Результат выставления стоп-заявки.
      example:
        stopOrderId: stopOrderId
      properties:
        stopOrderId:
          type: string
      type: object
    v1Quotation:
      example:
        nano: 6
        units: units
      properties:
        units:
          format: int64
          title: целая часть суммы, может быть отрицательным числом
          type: string
        nano:
          format: int32
          title: дробная часть суммы, может быть отрицательным числом
          type: integer
      title: Котировка - денежная сумма без указания валюты
      type: object
    v1SandboxPayInRequest:
      description: Запрос пополнения счёта в песочнице.
      properties:
        accountId:
          type: string
        amount:
          $ref: '#/components/schemas/v1MoneyValue'
      type: object
    v1SandboxPayInResponse:
      description: Результат пополнения счёта, текущий баланс.
      example:
        balance:
          nano: 5
          currency: currency
          units: units
      properties:
        balance:
          $ref: '#/components/schemas/v1MoneyValue'
      type: object
    v1SecurityTradingStatus:
      default: SECURITY_TRADING_STATUS_UNSPECIFIED
      enum:
      - SECURITY_TRADING_STATUS_UNSPECIFIED
      - SECURITY_TRADING_STATUS_NOT_AVAILABLE_FOR_TRADING
      - SECURITY_TRADING_STATUS_OPENING_PERIOD
      - SECURITY_TRADING_STATUS_CLOSING_PERIOD
      - SECURITY_TRADING_STATUS_BREAK_IN_TRADING
      - SECURITY_TRADING_STATUS_NORMAL_TRADING
      - SECURITY_TRADING_STATUS_CLOSING_AUCTION
      - SECURITY_TRADING_STATUS_DARK_POOL_AUCTION
      - SECURITY_TRADING_STATUS_DISCRETE_AUCTION
      - SECURITY_TRADING_STATUS_OPENING_AUCTION_PERIOD
      - SECURITY_TRADING_STATUS_TRADING_AT_CLOSING_AUCTION_PRICE
      - SECURITY_TRADING_STATUS_SESSION_ASSIGNED
      - SECURITY_TRADING_STATUS_SESSION_CLOSE
      - SECURITY_TRADING_STATUS_SESSION_OPEN
      - SECURITY_TRADING_STATUS_DEALER_NORMAL_TRADING
      - SECURITY_TRADING_STATUS_DEALER_BREAK_IN_TRADING
      - SECURITY_TRADING_STATUS_DEALER_NOT_AVAILABLE_FOR_TRADING
      title: Режим торгов инструмента
      type: string
    v1Share:
      description: Объект передачи информации об акции.
      example:
        figi: figi
        dshortMin:
          nano: 6
          units: units
        countryOfRisk: countryOfRisk
        lot: 0
        dlong:
          nano: 6
          units: units
        nominal:
          nano: 5
          currency: currency
          units: units
        sellAvailableFlag: true
        currency: currency
        sector: sector
        buyAvailableFlag: true
        classCode: classCode
        ticker: ticker
        apiTradeAvailableFlag: true
        dlongMin:
          nano: 6
          units: units
        shortEnabledFlag: true
        kshort:
          nano: 6
          units: units
        issueSizePlan: issueSizePlan
        minPriceIncrement:
          nano: 6
          units: units
        otcFlag: true
        klong:
          nano: 6
          units: units
        dshort:
          nano: 6
          units: units
        name: name
        issueSize: issueSize
        exchange: exchange
        countryOfRiskName: countryOfRiskName
        divYieldFlag: true
        isin: isin
        ipoDate: 2000-01-23T04:56:07.000+00:00
      properties:
        figi:
          type: string
        ticker:
          type: string
        classCode:
          type: string
        isin:
          type: string
        lot:
          format: int32
          type: integer
        currency:
          type: string
        klong:
          $ref: '#/components/schemas/v1Quotation'
        kshort:
          $ref: '#/components/schemas/v1Quotation'
        dlong:
          $ref: '#/components/schemas/v1Quotation'
        dshort:
          $ref: '#/components/schemas/v1Quotation'
        dlongMin:
          $ref: '#/components/schemas/v1Quotation'
        dshortMin:
          $ref: '#/components/schemas/v1Quotation'
        shortEnabledFlag:
          type: boolean
        name:
          type: string
        exchange:
          type: string
        ipoDate:
          format: date-time
          type: string
        issueSize:
          format: int64
          type: string
        countryOfRisk:
          type: string
        countryOfRiskName:
          type: string
        sector:
          type: string
        issueSizePlan:
          format: int64
          type: string
        nominal:
          $ref: '#/components/schemas/v1MoneyValue'
        tradingStatus:
          $ref: '#/components/schemas/v1SecurityTradingStatus'
        otcFlag:
          type: boolean
        buyAvailableFlag:
          type: boolean
        sellAvailableFlag:
          type: boolean
        divYieldFlag:
          type: boolean
        shareType:
          $ref: '#/components/schemas/v1ShareType'
        minPriceIncrement:
          $ref: '#/components/schemas/v1Quotation'
        apiTradeAvailableFlag:
          type: boolean
      type: object
    v1ShareResponse:
      description: Данные по акции.
      example:
        instrument:
          figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          dlong:
            nano: 6
            units: units
          nominal:
            nano: 5
            currency: currency
            units: units
          sellAvailableFlag: true
          currency: currency
          sector: sector
          buyAvailableFlag: true
          classCode: classCode
          ticker: ticker
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          issueSizePlan: issueSizePlan
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          name: name
          issueSize: issueSize
          exchange: exchange
          countryOfRiskName: countryOfRiskName
          divYieldFlag: true
          isin: isin
          ipoDate: 2000-01-23T04:56:07.000+00:00
      properties:
        instrument:
          $ref: '#/components/schemas/v1Share'
      type: object
    v1ShareType:
      default: SHARE_TYPE_UNSPECIFIED
      description: Тип акций.
      enum:
      - SHARE_TYPE_UNSPECIFIED
      - SHARE_TYPE_COMMON
      - SHARE_TYPE_PREFERRED
      - SHARE_TYPE_ADR
      - SHARE_TYPE_GDR
      - SHARE_TYPE_MLP
      - SHARE_TYPE_NY_REG_SHRS
      - SHARE_TYPE_CLOSED_END_FUND
      - SHARE_TYPE_REIT
      type: string
    v1SharesResponse:
      description: Данные по акциям.
      example:
        instruments:
        - figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          dlong:
            nano: 6
            units: units
          nominal:
            nano: 5
            currency: currency
            units: units
          sellAvailableFlag: true
          currency: currency
          sector: sector
          buyAvailableFlag: true
          classCode: classCode
          ticker: ticker
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          issueSizePlan: issueSizePlan
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          name: name
          issueSize: issueSize
          exchange: exchange
          countryOfRiskName: countryOfRiskName
          divYieldFlag: true
          isin: isin
          ipoDate: 2000-01-23T04:56:07.000+00:00
        - figi: figi
          dshortMin:
            nano: 6
            units: units
          countryOfRisk: countryOfRisk
          lot: 0
          dlong:
            nano: 6
            units: units
          nominal:
            nano: 5
            currency: currency
            units: units
          sellAvailableFlag: true
          currency: currency
          sector: sector
          buyAvailableFlag: true
          classCode: classCode
          ticker: ticker
          apiTradeAvailableFlag: true
          dlongMin:
            nano: 6
            units: units
          shortEnabledFlag: true
          kshort:
            nano: 6
            units: units
          issueSizePlan: issueSizePlan
          minPriceIncrement:
            nano: 6
            units: units
          otcFlag: true
          klong:
            nano: 6
            units: units
          dshort:
            nano: 6
            units: units
          name: name
          issueSize: issueSize
          exchange: exchange
          countryOfRiskName: countryOfRiskName
          divYieldFlag: true
          isin: isin
          ipoDate: 2000-01-23T04:56:07.000+00:00
      properties:
        instruments:
          items:
            $ref: '#/components/schemas/v1Share'
          type: array
      type: object
    v1StopOrder:
      description: Информация о стоп-заявке.
      example:
        activationDateTime: 2000-01-23T04:56:07.000+00:00
        stopPrice:
          nano: 5
          currency: currency
          units: units
        lotsRequested: lotsRequested
        expirationTime: 2000-01-23T04:56:07.000+00:00
        price:
          nano: 5
          currency: currency
          units: units
        figi: figi
        currency: currency
        stopOrderId: stopOrderId
        createDate: 2000-01-23T04:56:07.000+00:00
      properties:
        stopOrderId:
          type: string
        lotsRequested:
          format: int64
          type: string
        figi:
          type: string
        direction:
          $ref: '#/components/schemas/v1StopOrderDirection'
        currency:
          type: string
        orderType:
          $ref: '#/components/schemas/v1StopOrderType'
        createDate:
          format: date-time
          type: string
        activationDateTime:
          format: date-time
          type: string
        expirationTime:
          format: date-time
          type: string
        price:
          $ref: '#/components/schemas/v1MoneyValue'
        stopPrice:
          $ref: '#/components/schemas/v1MoneyValue'
      type: object
    v1StopOrderDirection:
      default: STOP_ORDER_DIRECTION_UNSPECIFIED
      description: Направление сделки стоп-заявки.
      enum:
      - STOP_ORDER_DIRECTION_UNSPECIFIED
      - STOP_ORDER_DIRECTION_BUY
      - STOP_ORDER_DIRECTION_SELL
      type: string
    v1StopOrderExpirationType:
      default: STOP_ORDER_EXPIRATION_TYPE_UNSPECIFIED
      description: Тип экспирации стоп-заявке.
      enum:
      - STOP_ORDER_EXPIRATION_TYPE_UNSPECIFIED
      - STOP_ORDER_EXPIRATION_TYPE_GOOD_TILL_CANCEL
      - STOP_ORDER_EXPIRATION_TYPE_GOOD_TILL_DATE
      type: string
    v1StopOrderType:
      default: STOP_ORDER_TYPE_UNSPECIFIED
      description: Тип стоп-заявки.
      enum:
      - STOP_ORDER_TYPE_UNSPECIFIED
      - STOP_ORDER_TYPE_TAKE_PROFIT
      - STOP_ORDER_TYPE_STOP_LOSS
      - STOP_ORDER_TYPE_STOP_LIMIT
      type: string
    v1StreamLimit:
      description: Лимит stream-соединений.
      example:
        streams:
        - streams
        - streams
        limit: 6
      properties:
        limit:
          format: int32
          type: integer
        streams:
          items:
            type: string
          type: array
      type: object
    v1TradingDay:
      description: Информация о времени торгов.
      example:
        date: 2000-01-23T04:56:07.000+00:00
        clearingEndTime: 2000-01-23T04:56:07.000+00:00
        openingAuctionStartTime: 2000-01-23T04:56:07.000+00:00
        closingAuctionEndTime: 2000-01-23T04:56:07.000+00:00
        eveningEndTime: 2000-01-23T04:56:07.000+00:00
        premarketStartTime: 2000-01-23T04:56:07.000+00:00
        eveningOpeningAuctionStartTime: 2000-01-23T04:56:07.000+00:00
        isTradingDay: true
        eveningStartTime: 2000-01-23T04:56:07.000+00:00
        premarketEndTime: 2000-01-23T04:56:07.000+00:00
        clearingStartTime: 2000-01-23T04:56:07.000+00:00
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
      properties:
        date:
          format: date-time
          type: string
        isTradingDay:
          type: boolean
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        openingAuctionStartTime:
          format: date-time
          type: string
        closingAuctionEndTime:
          format: date-time
          type: string
        eveningOpeningAuctionStartTime:
          format: date-time
          type: string
        eveningStartTime:
          format: date-time
          type: string
        eveningEndTime:
          format: date-time
          type: string
        clearingStartTime:
          format: date-time
          type: string
        clearingEndTime:
          format: date-time
          type: string
        premarketStartTime:
          format: date-time
          type: string
        premarketEndTime:
          format: date-time
          type: string
      type: object
    v1TradingSchedule:
      description: Данные по торговой площадке.
      example:
        days:
        - date: 2000-01-23T04:56:07.000+00:00
          clearingEndTime: 2000-01-23T04:56:07.000+00:00
          openingAuctionStartTime: 2000-01-23T04:56:07.000+00:00
          closingAuctionEndTime: 2000-01-23T04:56:07.000+00:00
          eveningEndTime: 2000-01-23T04:56:07.000+00:00
          premarketStartTime: 2000-01-23T04:56:07.000+00:00
          eveningOpeningAuctionStartTime: 2000-01-23T04:56:07.000+00:00
          isTradingDay: true
          eveningStartTime: 2000-01-23T04:56:07.000+00:00
          premarketEndTime: 2000-01-23T04:56:07.000+00:00
          clearingStartTime: 2000-01-23T04:56:07.000+00:00
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        - date: 2000-01-23T04:56:07.000+00:00
          clearingEndTime: 2000-01-23T04:56:07.000+00:00
          openingAuctionStartTime: 2000-01-23T04:56:07.000+00:00
          closingAuctionEndTime: 2000-01-23T04:56:07.000+00:00
          eveningEndTime: 2000-01-23T04:56:07.000+00:00
          premarketStartTime: 2000-01-23T04:56:07.000+00:00
          eveningOpeningAuctionStartTime: 2000-01-23T04:56:07.000+00:00
          isTradingDay: true
          eveningStartTime: 2000-01-23T04:56:07.000+00:00
          premarketEndTime: 2000-01-23T04:56:07.000+00:00
          clearingStartTime: 2000-01-23T04:56:07.000+00:00
          startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        exchange: exchange
      properties:
        exchange:
          type: string
        days:
          items:
            $ref: '#/components/schemas/v1TradingDay'
          type: array
      type: object
    v1TradingSchedulesRequest:
      properties:
        exchange:
          type: string
        from:
          format: date-time
          type: string
        to:
          format: date-time
          type: string
      title: Запрос расписания торгов
      type: object
    v1TradingSchedulesResponse:
      example:
        exchanges:
        - days:
          - date: 2000-01-23T04:56:07.000+00:00
            clearingEndTime: 2000-01-23T04:56:07.000+00:00
            openingAuctionStartTime: 2000-01-23T04:56:07.000+00:00
            closingAuctionEndTime: 2000-01-23T04:56:07.000+00:00
            eveningEndTime: 2000-01-23T04:56:07.000+00:00
            premarketStartTime: 2000-01-23T04:56:07.000+00:00
            eveningOpeningAuctionStartTime: 2000-01-23T04:56:07.000+00:00
            isTradingDay: true
            eveningStartTime: 2000-01-23T04:56:07.000+00:00
            premarketEndTime: 2000-01-23T04:56:07.000+00:00
            clearingStartTime: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          - date: 2000-01-23T04:56:07.000+00:00
            clearingEndTime: 2000-01-23T04:56:07.000+00:00
            openingAuctionStartTime: 2000-01-23T04:56:07.000+00:00
            closingAuctionEndTime: 2000-01-23T04:56:07.000+00:00
            eveningEndTime: 2000-01-23T04:56:07.000+00:00
            premarketStartTime: 2000-01-23T04:56:07.000+00:00
            eveningOpeningAuctionStartTime: 2000-01-23T04:56:07.000+00:00
            isTradingDay: true
            eveningStartTime: 2000-01-23T04:56:07.000+00:00
            premarketEndTime: 2000-01-23T04:56:07.000+00:00
            clearingStartTime: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          exchange: exchange
        - days:
          - date: 2000-01-23T04:56:07.000+00:00
            clearingEndTime: 2000-01-23T04:56:07.000+00:00
            openingAuctionStartTime: 2000-01-23T04:56:07.000+00:00
            closingAuctionEndTime: 2000-01-23T04:56:07.000+00:00
            eveningEndTime: 2000-01-23T04:56:07.000+00:00
            premarketStartTime: 2000-01-23T04:56:07.000+00:00
            eveningOpeningAuctionStartTime: 2000-01-23T04:56:07.000+00:00
            isTradingDay: true
            eveningStartTime: 2000-01-23T04:56:07.000+00:00
            premarketEndTime: 2000-01-23T04:56:07.000+00:00
            clearingStartTime: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          - date: 2000-01-23T04:56:07.000+00:00
            clearingEndTime: 2000-01-23T04:56:07.000+00:00
            openingAuctionStartTime: 2000-01-23T04:56:07.000+00:00
            closingAuctionEndTime: 2000-01-23T04:56:07.000+00:00
            eveningEndTime: 2000-01-23T04:56:07.000+00:00
            premarketStartTime: 2000-01-23T04:56:07.000+00:00
            eveningOpeningAuctionStartTime: 2000-01-23T04:56:07.000+00:00
            isTradingDay: true
            eveningStartTime: 2000-01-23T04:56:07.000+00:00
            premarketEndTime: 2000-01-23T04:56:07.000+00:00
            clearingStartTime: 2000-01-23T04:56:07.000+00:00
            startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          exchange: exchange
      properties:
        exchanges:
          items:
            $ref: '#/components/schemas/v1TradingSchedule'
          type: array
      title: Список торговых площадок
      type: object
    v1UnaryLimit:
      description: Лимит unary-методов.
      example:
        limitPerMinute: 0
        methods:
        - methods
        - methods
      properties:
        limitPerMinute:
          format: int32
          type: integer
        methods:
          items:
            type: string
          type: array
      type: object
    v1WithdrawLimitsRequest:
      description: Запрос доступного для вывода остатка.
      properties:
        accountId:
          type: string
      type: object
    v1WithdrawLimitsResponse:
      description: Доступный для вывода остаток.
      example:
        blockedGuarantee:
        - nano: 5
          currency: currency
          units: units
        - nano: 5
          currency: currency
          units: units
        money:
        - nano: 5
          currency: currency
          units: units
        - nano: 5
          currency: currency
          units: units
        blocked:
        - nano: 5
          currency: currency
          units: units
        - nano: 5
          currency: currency
          units: units
      properties:
        money:
          items:
            $ref: '#/components/schemas/v1MoneyValue'
          type: array
        blocked:
          items:
            $ref: '#/components/schemas/v1MoneyValue'
          type: array
        blockedGuarantee:
          items:
            $ref: '#/components/schemas/v1MoneyValue'
          type: array
      type: object
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
